
;<+C18_set_putchar_vector> void (*set_putchar_vector(void (*v)(char )@0))(char )
C18_set_putchar_vector
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    output_hook old = io_putchar;
	movlw -1
	movff C18_io_putchar+0,PLUSW0
	movff C18_io_putchar+1,INDF0
; 
;    io_putchar = v ;
	movlw -3
	movff PLUSW0,C18_io_putchar+0
	movlw -2
	movff PLUSW0,C18_io_putchar+1
;    return old ;
	movlw -1
	movff PLUSW0,R0+0
	movff INDF0,R0+1
; }
L18_set_putchar_vector_0
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_io_putchar>
;<-> void (*set_putchar_vector(void (*v)(char )@0))(char )

;<+C18_set_getchar_vector> char (*set_getchar_vector(char (*v)()@0))()
C18_set_getchar_vector
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    input_hook old = io_getchar ;
	movlw -1
	movff C18_io_getchar+0,PLUSW0
	movff C18_io_getchar+1,INDF0
; 
;    io_getchar = v ;
	movlw -3
	movff PLUSW0,C18_io_getchar+0
	movlw -2
	movff PLUSW0,C18_io_getchar+1
;    return old ;
	movlw -1
	movff PLUSW0,R0+0
	movff INDF0,R0+1
; }
L18_set_getchar_vector_1
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_io_getchar>
;<-> char (*set_getchar_vector(char (*v)()@0))()

;<+C18_putchar> void putchar(char c@0)
C18_putchar
;    io_putchar(c) ;
	movff INDF0,PREINC0
	movff C18_io_putchar,PREINC0
	movff C18_io_putchar+1,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
; }
L18_putchar_2
	return 0
;<?C18_io_putchar>
;<?indirect_call>
;<-> void putchar(char c@0)

;<+C18_printf> int printf(char *fmt@0, ... )
C18_printf
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    int count = 0 , prec ;
	movlw -6
	clrf PLUSW0,0
;    char *addpar;
;    char c ;
; 
;    addpar = (char *) & fmt;
	movlw 8
	ICALL pushLOCALNEGADDR
	movlw -4
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
; 
;    while (c = *fmt++)
L18_printf_17_while
	movlw -8
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -10
	incf PLUSW0,F,0
	bnc L18_printf_18
	movlw -9
	incf PLUSW0,F,0
L18_printf_18
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	movlw -3
	movff INDF0,PLUSW0
	movf POSTDEC0,W,0
	IBZ L18_printf_17_exit
;    {
;       if (c != '%')
	movlw -2
	movff PLUSW0,PREINC0
	movlw 37
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_printf_16_else
;       {
;          putchar(c);
	movlw -2
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++count ;
	movlw -6
	incf PLUSW0,F,0
;       }
;       else
	IBRA L18_printf_16_endif
L18_printf_16_else
;       {
;          c = *fmt++;
	movlw -8
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -10
	incf PLUSW0,F,0
	bnc L18_printf_19
	movlw -9
	incf PLUSW0,F,0
L18_printf_19
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movlw -2
	movff INDF1,PLUSW0
;          if( c == 'l')
	movff PLUSW0,PREINC0
	movlw 108
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_15_else
;          {
;             c = *fmt++;
	movlw -8
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -10
	incf PLUSW0,F,0
	bnc L18_printf_20
	movlw -9
	incf PLUSW0,F,0
L18_printf_20
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movlw -2
	movff INDF1,PLUSW0
;             if( c == 'd')
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_6_else
;             {
;                addpar -= 2 ;
	movlw 4
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                count += outdec(*(long *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outdec
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 6
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if( c == 'u')
	IBRA L18_printf_6_endif
L18_printf_6_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_5_else
;             {
;                addpar -= 2 ;
	movlw 4
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                count += outdecu(*(unsigned long *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 6
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'x')
	IBRA L18_printf_5_endif
L18_printf_5_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_4_endif
;             {
;                addpar -= 2 ;
	movlw 4
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                count += outhex(*(long *)addpar, 'a') ;
	movlw 97
	movwf PREINC0,0
	movlw -5
	movff PLUSW0,FSR1L
	movlw -4
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outhex
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 6
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;          }
L18_printf_4_endif
L18_printf_5_endif
L18_printf_6_endif
;          else
	IBRA L18_printf_15_endif
L18_printf_15_else
;          {
;             if( c == 'd')
	movlw -2
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_14_else
;             {
; 
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_printf_21
	movlw -3
	decf PLUSW0,F,0
L18_printf_21
;                count += outdec(*(int *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	ICALL cast8_16
	ICALL C18_outdec
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 6
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if( c == 'u')
	IBRA L18_printf_14_endif
L18_printf_14_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_13_else
;             {
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_printf_22
	movlw -3
	decf PLUSW0,F,0
L18_printf_22
;                count += outdecu(*(unsigned int *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	clrf PREINC0,0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 6
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'x')
	IBRA L18_printf_13_endif
L18_printf_13_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_12_else
;             {
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_printf_23
	movlw -3
	decf PLUSW0,F,0
L18_printf_23
;                count += outhex(*(unsigned int *)addpar, 'A') ;
	movlw 65
	movwf PREINC0,0
	movlw -5
	movff PLUSW0,FSR1L
	movlw -4
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	clrf PREINC0,0
	ICALL C18_outhex
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 6
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'c')
	IBRA L18_printf_12_endif
L18_printf_12_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 99
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_11_else
;             {
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_printf_24
	movlw -3
	decf PLUSW0,F,0
L18_printf_24
;                putchar(*addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                ++count ;
	movlw -6
	incf PLUSW0,F,0
;             }
;             else if(c == 's')
	IBRA L18_printf_11_endif
L18_printf_11_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 115
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_printf_10_else
;             {
;                char *q ;
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_printf_25
	movlw -3
	decf PLUSW0,F,0
L18_printf_25
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_printf_26
	movlw -3
	decf PLUSW0,F,0
L18_printf_26
; 
;                for ( q = *(char **)addpar; *q ; ++q )
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movlw -1
	movff POSTINC1,PLUSW0
	movff POSTDEC1,INDF0
L18_printf_7
	movlw -1
	movff PLUSW0,FSR1L
	movff INDF0,FSR1H
	movff INDF1,PREINC0
	movf POSTDEC0,W,0
	IBZ L18_printf_8
;                {
;                   putchar(*q);
	movlw -1
	movff PLUSW0,FSR1L
	movff INDF0,FSR1H
	movff INDF1,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                   ++count ;
	movlw -6
	incf PLUSW0,F,0
;                }
L18_printf_9
	movlw -1
	incf PLUSW0,F,0
	bnc L18_printf_27
	incf INDF0,F,0
L18_printf_27
	IBRA L18_printf_7
L18_printf_8
;             }
;             else
	IBRA L18_printf_10_endif
L18_printf_10_else
;             {
;                putchar('%');
	movlw 37
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                putchar(c);
	movlw -2
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                ++count ;
	movlw -6
	incf PLUSW0,F,0
;                ++count ;
	incf PLUSW0,F,0
;             }
L18_printf_10_endif
L18_printf_11_endif
L18_printf_12_endif
L18_printf_13_endif
L18_printf_14_endif
;          }
L18_printf_15_endif
;       }
L18_printf_16_endif
;    }
	IBRA L18_printf_17_while
L18_printf_17_exit
;    return count ;
	movlw -6
	movff PLUSW0,R0
; }
L18_printf_3
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_outdec>
;<?C18_outdecu>
;<?C18_outhex>
;<?C18_putchar>
;<?UEQ8>
;<?UNE8>
;<?cast8_16>
;<?getLOCALNEGADDR>
;<?pushLOCALNEGADDR>
;<-> int printf(char *fmt@0, ... )

;<+C18_xprintf> int xprintf(char *fmt@0, ... )
C18_xprintf
; ---  non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 17
	addwf FSR0L,F,0
	movlw 0
	addwfc FSR0H,F,0  ; reserve stack
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
;    va_list ap ;
;    int count = 0 , prec ;
	movlw -14
	clrf PLUSW0,0
;    char c ;
;    long kl ;
;    float kf ;
;    long long kll ;
; 
;    (ap) = (char*)(&(fmt)) ;
	movlw 18
	ICALL pushLOCALNEGADDR
	movlw -16
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
; 
;    while (c = *fmt++)
L18_xprintf_42_while
	movlw -18
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -20
	incf PLUSW0,F,0
	bnc L18_xprintf_43
	movlw -19
	incf PLUSW0,F,0
L18_xprintf_43
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	movlw -13
	movff INDF0,PLUSW0
	movf POSTDEC0,W,0
	IBZ L18_xprintf_42_exit
;    {
;       if (c != '%')
	movlw -12
	movff PLUSW0,PREINC0
	movlw 37
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_41_else
;       {
;          putchar(c);
	movlw -12
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++count ;
	movlw -14
	incf PLUSW0,F,0
;       }
;       else
	IBRA L18_xprintf_41_endif
L18_xprintf_41_else
;       {
;          c = *fmt++;
	movlw -18
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -20
	incf PLUSW0,F,0
	bnc L18_xprintf_44
	movlw -19
	incf PLUSW0,F,0
L18_xprintf_44
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movlw -12
	movff INDF1,PLUSW0
;          if( c == 'l')
	movff PLUSW0,PREINC0
	movlw 108
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_40_else
;          {
;             c = *fmt++;
	movlw -18
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -20
	incf PLUSW0,F,0
	bnc L18_xprintf_45
	movlw -19
	incf PLUSW0,F,0
L18_xprintf_45
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movlw -12
	movff INDF1,PLUSW0
;             if( c == 'd')
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_31_else
;             {
;                count += outdec(( (ap)-=sizeof(long), *(long*) (ap) ));
	movlw 16
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outdec
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 14
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if( c == 'u')
	IBRA L18_xprintf_31_endif
L18_xprintf_31_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_30_else
;             {
;                 count += outdecu(( (ap)-=sizeof(unsigned long), *(unsigned long*) (ap) ) );
	movlw 16
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 14
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'x')
	IBRA L18_xprintf_30_endif
L18_xprintf_30_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_29_endif
;             {
;               count += outhex( ( (ap)-=sizeof(long), *(long*) (ap) ) , 'a') ;
	movlw 97
	movwf PREINC0,0
	movlw 17
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
	movlw -17
	movff PLUSW0,FSR1L
	movlw -16
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outhex
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 14
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;          }
L18_xprintf_29_endif
L18_xprintf_30_endif
L18_xprintf_31_endif
;          else
	IBRA L18_xprintf_40_endif
L18_xprintf_40_else
;          {
;             if( c == 'd')
	movlw -12
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_39_else
;             {
;                count += outdec(( (ap)-=sizeof(int), *(int*) (ap) ));
	movlw -16
	decf PLUSW0,F,0
	bc L18_xprintf_46
	movlw -15
	decf PLUSW0,F,0
L18_xprintf_46
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	ICALL cast8_16
	ICALL C18_outdec
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 14
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if( c == 'u')
	IBRA L18_xprintf_39_endif
L18_xprintf_39_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_38_else
;             {
;                count += outdecu(( (ap)-=sizeof(unsigned int), *(unsigned int*) (ap) ) );
	movlw -16
	decf PLUSW0,F,0
	bc L18_xprintf_47
	movlw -15
	decf PLUSW0,F,0
L18_xprintf_47
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	clrf PREINC0,0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 14
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'x')
	IBRA L18_xprintf_38_endif
L18_xprintf_38_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_37_else
;             {
;                count += outhex( ( (ap)-=sizeof(unsigned int), *(unsigned int*) (ap) ) , 'a') ;
	movlw 97
	movwf PREINC0,0
	movlw -17
	decf PLUSW0,F,0
	bc L18_xprintf_48
	movlw -16
	decf PLUSW0,F,0
L18_xprintf_48
	movlw -17
	movff PLUSW0,FSR1L
	movlw -16
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	clrf PREINC0,0
	ICALL C18_outhex
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 14
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'c')
	IBRA L18_xprintf_37_endif
L18_xprintf_37_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 99
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_36_else
;             {
;                putchar(( (ap)-=sizeof(char), *(char*) (ap) )) ;
	movlw -16
	decf PLUSW0,F,0
	bc L18_xprintf_49
	movlw -15
	decf PLUSW0,F,0
L18_xprintf_49
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                ++count ;
	movlw -14
	incf PLUSW0,F,0
;             }
;             else if(c == 's')
	IBRA L18_xprintf_36_endif
L18_xprintf_36_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 115
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_xprintf_35_else
;             {
;                char *q ;
;                for ( q = ( (ap)-=sizeof(char*), *(char**) (ap) ) ; *q ; ++q )
	movlw 16
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movlw -1
	movff POSTINC1,PLUSW0
	movff POSTDEC1,INDF0
L18_xprintf_32
	movlw -1
	movff PLUSW0,FSR1L
	movff INDF0,FSR1H
	movff INDF1,PREINC0
	movf POSTDEC0,W,0
	IBZ L18_xprintf_33
;                {
;                   putchar(*q);
	movlw -1
	movff PLUSW0,FSR1L
	movff INDF0,FSR1H
	movff INDF1,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                   ++count ;
	movlw -14
	incf PLUSW0,F,0
;                }
L18_xprintf_34
	movlw -1
	incf PLUSW0,F,0
	bnc L18_xprintf_50
	incf INDF0,F,0
L18_xprintf_50
	IBRA L18_xprintf_32
L18_xprintf_33
;             }
;             else
	IBRA L18_xprintf_35_endif
L18_xprintf_35_else
;             {
;                putchar('%');
	movlw 37
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                putchar(c);
	movlw -12
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                count += 2 ;
	movlw -14
	incf PLUSW0,F,0
	incf PLUSW0,F,0
;             }
L18_xprintf_35_endif
L18_xprintf_36_endif
L18_xprintf_37_endif
L18_xprintf_38_endif
L18_xprintf_39_endif
;          }
L18_xprintf_40_endif
;       }
L18_xprintf_41_endif
;    }
	IBRA L18_xprintf_42_while
L18_xprintf_42_exit
;    return count ;
	movlw -14
	movff PLUSW0,R0
; }
L18_xprintf_28
; --- non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 17
	subwf FSR0L,F,0
	movlw 0
	subwfb FSR0H,F,0 ; clean stack 
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
	return 0
;<?C18_outdec>
;<?C18_outdecu>
;<?C18_outhex>
;<?C18_putchar>
;<?UEQ8>
;<?UNE8>
;<?cast8_16>
;<?getLOCALNEGADDR>
;<?pushLOCALNEGADDR>
;<-> int xprintf(char *fmt@0, ... )

;<+C18_RFprintf> int RFprintf(int (*fmt)(unsigned int )@0, ... )
C18_RFprintf
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    int count = 0, i = 0 , prec ;
	movlw -7
	clrf PLUSW0,0
	movlw -6
	clrf PLUSW0,0
;    char *addpar;
;    char c ;
; 
;    addpar = (char *) & fmt;
	movlw 9
	ICALL pushLOCALNEGADDR
	movlw -4
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
; 
;    while (c = fmt(i++) )
L18_RFprintf_65_while
	movlw -6
	movff PLUSW0,PREINC0
	movlw -7
	incf PLUSW0,F,0
	movlw -10
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,PREINC0
	movlw -3
	movff INDF0,PLUSW0
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_65_exit
;    {
;       if (c != '%')
	movlw -2
	movff PLUSW0,PREINC0
	movlw 37
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_64_else
;       {
;          putchar(c);
	movlw -2
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++count ;
	movlw -7
	incf PLUSW0,F,0
;       }
;       else
	IBRA L18_RFprintf_64_endif
L18_RFprintf_64_else
;       {
;          c = fmt(i++) ;
	movlw -6
	movff PLUSW0,PREINC0
	movlw -7
	incf PLUSW0,F,0
	movlw -10
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movlw -2
	movff R0,PLUSW0
;          if( c == 'l')
	movff PLUSW0,PREINC0
	movlw 108
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_63_else
;          {
;             c = fmt(i++);
	movlw -6
	movff PLUSW0,PREINC0
	movlw -7
	incf PLUSW0,F,0
	movlw -10
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movlw -2
	movff R0,PLUSW0
;             if( c == 'd')
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_54_else
;             {
;                addpar -= 2 ;
	movlw 4
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                count += outdec(*(long *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outdec
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 7
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if( c == 'u')
	IBRA L18_RFprintf_54_endif
L18_RFprintf_54_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_53_else
;             {
;                addpar -= 2 ;
	movlw 4
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                count += outdecu(*(unsigned long *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 7
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'x')
	IBRA L18_RFprintf_53_endif
L18_RFprintf_53_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_52_endif
;             {
;                addpar -= 2 ;
	movlw 4
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                count += outhex(*(long *)addpar, 'a') ;
	movlw 97
	movwf PREINC0,0
	movlw -5
	movff PLUSW0,FSR1L
	movlw -4
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	ICALL C18_outhex
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 7
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;          }
L18_RFprintf_52_endif
L18_RFprintf_53_endif
L18_RFprintf_54_endif
;          else
	IBRA L18_RFprintf_63_endif
L18_RFprintf_63_else
;          {
;             if( c == 'd')
	movlw -2
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_62_else
;             {
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_RFprintf_66
	movlw -3
	decf PLUSW0,F,0
L18_RFprintf_66
;                count += outdec(*(int *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	ICALL cast8_16
	ICALL C18_outdec
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 7
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if( c == 'u')
	IBRA L18_RFprintf_62_endif
L18_RFprintf_62_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_61_else
;             {
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_RFprintf_67
	movlw -3
	decf PLUSW0,F,0
L18_RFprintf_67
;                count += outdecu(*(unsigned int *)addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	clrf PREINC0,0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 7
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'x')
	IBRA L18_RFprintf_61_endif
L18_RFprintf_61_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_60_else
;             {
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_RFprintf_68
	movlw -3
	decf PLUSW0,F,0
L18_RFprintf_68
;                count += outhex(*(unsigned int *)addpar, 'A') ;
	movlw 65
	movwf PREINC0,0
	movlw -5
	movff PLUSW0,FSR1L
	movlw -4
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	clrf PREINC0,0
	ICALL C18_outhex
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf R0,W,0
	movwf PRODL,0
	movlw 7
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
;             }
;             else if(c == 'c')
	IBRA L18_RFprintf_60_endif
L18_RFprintf_60_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 99
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_59_else
;             {
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_RFprintf_69
	movlw -3
	decf PLUSW0,F,0
L18_RFprintf_69
;                putchar(*addpar);
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                ++count ;
	movlw -7
	incf PLUSW0,F,0
;             }
;             else if(c == 's')
	IBRA L18_RFprintf_59_endif
L18_RFprintf_59_else
	movlw -2
	movff PLUSW0,PREINC0
	movlw 115
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_58_else
;             {
;                char *q ;
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_RFprintf_70
	movlw -3
	decf PLUSW0,F,0
L18_RFprintf_70
;                --addpar ;
	movlw -4
	decf PLUSW0,F,0
	bc L18_RFprintf_71
	movlw -3
	decf PLUSW0,F,0
L18_RFprintf_71
; 
;                for ( q = *(char **)addpar; *q ; ++q )
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	movlw -1
	movff POSTINC1,PLUSW0
	movff POSTDEC1,INDF0
L18_RFprintf_55
	movlw -1
	movff PLUSW0,FSR1L
	movff INDF0,FSR1H
	movff INDF1,PREINC0
	movf POSTDEC0,W,0
	IBZ L18_RFprintf_56
;                {
;                   putchar(*q);
	movlw -1
	movff PLUSW0,FSR1L
	movff INDF0,FSR1H
	movff INDF1,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                   ++count ;
	movlw -7
	incf PLUSW0,F,0
;                }
L18_RFprintf_57
	movlw -1
	incf PLUSW0,F,0
	bnc L18_RFprintf_72
	incf INDF0,F,0
L18_RFprintf_72
	IBRA L18_RFprintf_55
L18_RFprintf_56
;             }
;             else
	IBRA L18_RFprintf_58_endif
L18_RFprintf_58_else
;             {
;                putchar('%');
	movlw 37
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                putchar(c);
	movlw -2
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;                ++count ;
	movlw -7
	incf PLUSW0,F,0
;                ++count ;
	incf PLUSW0,F,0
;             }
L18_RFprintf_58_endif
L18_RFprintf_59_endif
L18_RFprintf_60_endif
L18_RFprintf_61_endif
L18_RFprintf_62_endif
;          }
L18_RFprintf_63_endif
;       }
L18_RFprintf_64_endif
;    }
	IBRA L18_RFprintf_65_while
L18_RFprintf_65_exit
;    return count ;
	movlw -7
	movff PLUSW0,R0
; }
L18_RFprintf_51
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_outdec>
;<?C18_outdecu>
;<?C18_outhex>
;<?C18_putchar>
;<?UEQ8>
;<?UNE8>
;<?cast8_16>
;<?getLOCALNEGADDR>
;<?indirect_call>
;<?pushLOCALNEGADDR>
;<-> int RFprintf(int (*fmt)(unsigned int )@0, ... )

;<+C18_outhex> int outhex(unsigned long n@1,char up@0)
C18_outhex
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    int c, flag , k , count;
; 
; 
;    for (count = 0, flag = 0, k = 12 ; k >= 0 ; k -= 4 )
	clrf INDF0,0
	movlw -2
	clrf PLUSW0,0
	movlw 12
	movwf PREINC0,0
	movlw -1
	movff POSTDEC0,PLUSW0
L18_outhex_79
	movlw -1
	movf PLUSW0,W,0
	clrf PREINC0,0
	btfss WREG,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_outhex_80
;    {
;       c = (n >> k) ;
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -3
	movf PLUSW0,W,0
	ICALL rshift16u
	clrf POSTDEC0,0
	movlw -3
	movff POSTDEC0,PLUSW0
;       c &= 0xF;
	movlw 3
	ICALL getLOCALNEGADDR
	movlw 0xf
	andwf INDF1,F,0
;       if ( c || !k || flag )
	movlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	movlw -5
	movf PLUSW0,F,0
	IBNZ L18_outhex_78
	movlw -3
	movff PLUSW0,PREINC0
	ICALL lnot8
	movf POSTDEC0,W,0
	IBNZ L18_outhex_78
	decf INDF0,F,0
L18_outhex_78
	movf POSTDEC0,W,0
	IBNZ L18_outhex_77
	movlw -3
	movf PLUSW0,F,0
	IBNZ L18_outhex_77
	decf INDF0,F,0
L18_outhex_77
	movf POSTDEC0,W,0
	IBZ L18_outhex_76_endif
;       {
;          c = (c >= 10) ? c - 10 + up : c + '0' ;
	movlw -3
	movff PLUSW0,PREINC0
	movlw 10
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_outhex_75
	movlw -3
	movff PLUSW0,PREINC0
	movlw 10
	subwf INDF0,F,0
	movlw -7
	movf PLUSW0,W,0
	addwf INDF0,F,0
	IBRA L18_outhex_74
L18_outhex_75
	movlw -3
	movff PLUSW0,PREINC0
	movlw 48
	addwf INDF0,F,0
L18_outhex_74
	movlw -3
	movff POSTDEC0,PLUSW0
;          flag = 0xFF ;
	movlw -2
	setf PLUSW0,0
;          putchar(c);
	movlw -3
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++count ;
	incf INDF0,F,0
;       }
;    }
L18_outhex_76_endif
L18_outhex_81
	movlw 1
	ICALL getLOCALNEGADDR
	movlw 4
	subwf INDF1,F,0
	IBRA L18_outhex_79
L18_outhex_80
;    return count ;
	movff INDF0,R0
; }
L18_outhex_73
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_putchar>
;<?GE8>
;<?getLOCALNEGADDR>
;<?lnot8>
;<?rshift16u>
;<-> int outhex(unsigned long n@1,char up@0)

;<+C18_outhex32> int outhex32(unsigned long32 n@1,char up@0)
C18_outhex32
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    int c, flag = 0, k = 28, count;
	movlw -2
	clrf PLUSW0,0
	movlw 28
	movwf PREINC0,0
	movlw -1
	movff POSTDEC0,PLUSW0
; 
;    for (count = 0 ; k >= 0 ;k -= 4 )
	clrf INDF0,0
L18_outhex32_88
	movlw -1
	movf PLUSW0,W,0
	clrf PREINC0,0
	btfss WREG,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_outhex32_89
;    {
;       c = (n >> k) & 0xF;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -5
	movf PLUSW0,W,0
	ICALL rshift32u
	movff FSR0L,FSR2L
	movff FSR0H,FSR2H
	clrf POSTDEC2,0
	clrf POSTDEC2,0
	clrf POSTDEC2,0
	movlw 0xf
	andwf POSTDEC2,F,0
	clrf POSTDEC0,0
	clrf POSTDEC0,0
	clrf POSTDEC0,0
	movlw -3
	movff POSTDEC0,PLUSW0
;       if ( c || !k || flag)
	movlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	movlw -5
	movf PLUSW0,F,0
	IBNZ L18_outhex32_87
	movlw -3
	movff PLUSW0,PREINC0
	ICALL lnot8
	movf POSTDEC0,W,0
	IBNZ L18_outhex32_87
	decf INDF0,F,0
L18_outhex32_87
	movf POSTDEC0,W,0
	IBNZ L18_outhex32_86
	movlw -3
	movf PLUSW0,F,0
	IBNZ L18_outhex32_86
	decf INDF0,F,0
L18_outhex32_86
	movf POSTDEC0,W,0
	IBZ L18_outhex32_85_endif
;       {
;          flag = 0xFF ;
	movlw -2
	setf PLUSW0,0
;          c = (c >= 10) ? c - 10 + up : c + '0' ;
	movlw -3
	movff PLUSW0,PREINC0
	movlw 10
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_outhex32_84
	movlw -3
	movff PLUSW0,PREINC0
	movlw 10
	subwf INDF0,F,0
	movlw -9
	movf PLUSW0,W,0
	addwf INDF0,F,0
	IBRA L18_outhex32_83
L18_outhex32_84
	movlw -3
	movff PLUSW0,PREINC0
	movlw 48
	addwf INDF0,F,0
L18_outhex32_83
	movlw -3
	movff POSTDEC0,PLUSW0
;          putchar(c);
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++count ;
	incf INDF0,F,0
;       }
;    }
L18_outhex32_85_endif
L18_outhex32_90
	movlw 1
	ICALL getLOCALNEGADDR
	movlw 4
	subwf INDF1,F,0
	IBRA L18_outhex32_88
L18_outhex32_89
;    return count ;
	movff INDF0,R0
; }
L18_outhex32_82
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_putchar>
;<?GE8>
;<?getLOCALNEGADDR>
;<?lnot8>
;<?rshift32u>
;<-> int outhex32(unsigned long32 n@1,char up@0)

;<+C18_outdec> int outdec(long snumber@0)
C18_outdec
	movf PREINC0,F,0 ; reserve stack
;    int count ;
; 
;    if( snumber < 0)
	movlw -2
	movff PLUSW0,R0+0
	movlw -1
	movff PLUSW0,R0+1
	clrf PREINC0,0
	btfsc R0+1,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_outdec_93_else
;    {
;       putchar('-');
	movlw 45
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       if( snumber == -32768L)
	movlw -2
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	movlw -128
	movwf R0+1,0
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_outdec_92_else
;          count = outdecu(32768UL) ;
	clrf PREINC0,0
	movlw -128
	movwf PREINC0,0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
;       else
	IBRA L18_outdec_92_endif
L18_outdec_92_else
;          count = outdecu(-snumber) ;
	movlw -2
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL neg16
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
L18_outdec_92_endif
;    }
;    else
	IBRA L18_outdec_93_endif
L18_outdec_93_else
;       count = outdecu(snumber) ;
	movlw -2
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL C18_outdecu
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
L18_outdec_93_endif
;    return count ;
	movff INDF0,R0
; }
L18_outdec_91
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_outdecu>
;<?C18_putchar>
;<?UEQ16>
;<?neg16>
;<-> int outdec(long snumber@0)

;<+C18_outdecu> int outdecu(unsigned long number@0)
C18_outdecu
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    unsigned long k = 10000 ;
	movlw 16
	movwf PREINC0,0
	movlw -4
	movff POSTDEC0,PLUSW0
	movlw 39
	movwf PREINC0,0
	movlw -3
	movff POSTDEC0,PLUSW0
;    unsigned int zs = 0;
	movlw -2
	clrf PLUSW0,0
;    int count = 0 ;
	movlw -1
	clrf PLUSW0,0
;    int c;
; 
;    while (k >= 1U)
L18_outdecu_98_while
	movlw -4
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw 1
	movwf R0+0,0
	clrf R0+1,0
	ICALL UGE16
	movf POSTDEC0,W,0
	IBZ L18_outdecu_98_exit
;    {
;       c = number / k + '0';
	movlw -6
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,R0+0
	movlw -5
	movff PLUSW0,R0+1
	ICALL div16u
	movlw 48
	movwf R0+0,0
	clrf R0+1,0
	ICALL add16
	clrf POSTDEC0,0
	movff POSTDEC0,INDF0
;       if ((c != '0') || (k == 1U) || zs)
	movlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	movlw -2
	movff PLUSW0,PREINC0
	movlw 48
	ICALL UNE8
	movf POSTDEC0,W,0
	IBNZ L18_outdecu_97
	movlw -6
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw 1
	movwf R0+0,0
	clrf R0+1,0
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBNZ L18_outdecu_97
	decf INDF0,F,0
L18_outdecu_97
	movf POSTDEC0,W,0
	IBNZ L18_outdecu_96
	movlw -3
	movf PLUSW0,F,0
	IBNZ L18_outdecu_96
	decf INDF0,F,0
L18_outdecu_96
	movf POSTDEC0,W,0
	IBZ L18_outdecu_95_endif
;       {
;          zs = -1;
	movlw -2
	setf PLUSW0,0
;          putchar(c);
	movff INDF0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++count ;
	movlw -1
	incf PLUSW0,F,0
;       }
;       number %= k;
L18_outdecu_95_endif
	movlw -4
	movff PLUSW0,R0+0
	movlw -3
	movff PLUSW0,R0+1
	movlw 6
	ICALL getLOCALNEGADDR
	ICALL ipmod16u
;       k /= 10;
	movlw 4
	ICALL getLOCALNEGADDR
	movlw 10
	movwf R0+0,0
	clrf R0+1,0
	ICALL ipdiv16u
;    }
	IBRA L18_outdecu_98_while
L18_outdecu_98_exit
;    return count ;
	movlw -1
	movff PLUSW0,R0
; }
L18_outdecu_94
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_putchar>
;<?UEQ16>
;<?UGE16>
;<?UNE8>
;<?add16>
;<?div16u>
;<?getLOCALNEGADDR>
;<?ipdiv16u>
;<?ipmod16u>
;<-> int outdecu(unsigned long number@0)

;<+C18_outdec32> int outdec32(long32 snumber@0)
C18_outdec32
	movf PREINC0,F,0 ; reserve stack
;    int count ;
; 
;    if( snumber < 0)
	movlw -4
	movff PLUSW0,R0+0
	movlw -3
	movff PLUSW0,R0+1
	movlw -2
	movff PLUSW0,R0+2
	movlw -1
	movff PLUSW0,R0+3
	clrf PREINC0,0
	btfsc R0+3,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_outdec32_101_else
;    {
;       putchar('-');
	movlw 45
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       if( snumber == (-2147483647LL - 1LL))
	movlw -4
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	clrf R0+2,0
	movlw -128
	movwf R0+3,0
	ICALL UEQ32
	movf POSTDEC0,W,0
	IBZ L18_outdec32_100_else
;          count = outdecu32(-(-2147483647LL - 1LL) ) ;
	clrf PREINC0,0
	clrf PREINC0,0
	clrf PREINC0,0
	movlw -128
	movwf PREINC0,0
	ICALL C18_outdecu32
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
;       else
	IBRA L18_outdec32_100_endif
L18_outdec32_100_else
;          count = outdecu32(-snumber) ;
	movlw -4
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL neg32
	ICALL C18_outdecu32
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
L18_outdec32_100_endif
;    }
;    else
	IBRA L18_outdec32_101_endif
L18_outdec32_101_else
;       count = outdecu32(snumber) ;
	movlw -4
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL C18_outdecu32
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
L18_outdec32_101_endif
;    return count ;
	movff INDF0,R0
; }
L18_outdec32_99
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_outdecu32>
;<?C18_putchar>
;<?UEQ32>
;<?neg32>
;<-> int outdec32(long32 snumber@0)

;<+C18_outdecu32> int outdecu32(unsigned long32 number@0)
C18_outdecu32
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    unsigned long long k = 1000000000ULL ;
	movlw -6
	clrf PLUSW0,0
	movlw -54
	movwf PREINC0,0
	movlw -5
	movff POSTDEC0,PLUSW0
	movlw -102
	movwf PREINC0,0
	movlw -4
	movff POSTDEC0,PLUSW0
	movlw 59
	movwf PREINC0,0
	movlw -3
	movff POSTDEC0,PLUSW0
;    unsigned int zs = 0;
	movlw -2
	clrf PLUSW0,0
;    int count = 0 ;
	movlw -1
	clrf PLUSW0,0
;    int c;
; 
;    while (k >= 1ULL)
L18_outdecu32_106_while
	movlw -6
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw 1
	movwf R0+0,0
	clrf R0+1,0
	clrf R0+2,0
	clrf R0+3,0
	ICALL UGE32
	movf POSTDEC0,W,0
	IBZ L18_outdecu32_106_exit
;    {
;       c = number / k + '0';
	movlw -10
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,R0+0
	movlw -9
	movff PLUSW0,R0+1
	movlw -8
	movff PLUSW0,R0+2
	movlw -7
	movff PLUSW0,R0+3
	ICALL div32u
	movlw 48
	movwf R0+0,0
	clrf R0+1,0
	clrf R0+2,0
	clrf R0+3,0
	ICALL add32
	clrf POSTDEC0,0
	clrf POSTDEC0,0
	clrf POSTDEC0,0
	movff POSTDEC0,INDF0
;       if ((c != '0') || (k == 1U) || zs)
	movlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	movlw -2
	movff PLUSW0,PREINC0
	movlw 48
	ICALL UNE8
	movf POSTDEC0,W,0
	IBNZ L18_outdecu32_105
	movlw -8
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw 1
	movwf R0+0,0
	clrf R0+1,0
	clrf R0+2,0
	clrf R0+3,0
	ICALL UEQ32
	movf POSTDEC0,W,0
	IBNZ L18_outdecu32_105
	decf INDF0,F,0
L18_outdecu32_105
	movf POSTDEC0,W,0
	IBNZ L18_outdecu32_104
	movlw -3
	movf PLUSW0,F,0
	IBNZ L18_outdecu32_104
	decf INDF0,F,0
L18_outdecu32_104
	movf POSTDEC0,W,0
	IBZ L18_outdecu32_103_endif
;       {
;          zs = -1;
	movlw -2
	setf PLUSW0,0
;          putchar(c);
	movff INDF0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++count ;
	movlw -1
	incf PLUSW0,F,0
;       }
;       number %= k;
L18_outdecu32_103_endif
	movlw -6
	movff PLUSW0,R0+0
	movlw -5
	movff PLUSW0,R0+1
	movlw -4
	movff PLUSW0,R0+2
	movlw -3
	movff PLUSW0,R0+3
	movlw 10
	ICALL getLOCALNEGADDR
	ICALL ipmod32u
;       k /= 10 ;
	movlw 6
	ICALL getLOCALNEGADDR
	movlw 10
	movwf R0+0,0
	clrf R0+1,0
	clrf R0+2,0
	clrf R0+3,0
	ICALL ipdiv32u
;    }
	IBRA L18_outdecu32_106_while
L18_outdecu32_106_exit
;    return count ;
	movlw -1
	movff PLUSW0,R0
; }
L18_outdecu32_102
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_putchar>
;<?UEQ32>
;<?UGE32>
;<?UNE8>
;<?add32>
;<?div32u>
;<?getLOCALNEGADDR>
;<?ipdiv32u>
;<?ipmod32u>
;<-> int outdecu32(unsigned long32 number@0)

;<+C18_puts> int puts(char *p@0)
C18_puts
	movf PREINC0,F,0 ; reserve stack
;    int count = puts_(p) ;
	movlw -2
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL C18_puts_
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
;    putchar('\n') ;
	movlw 10
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;    return count + 1 ;
	movff INDF0,PREINC0
	movlw 1
	addwf INDF0,F,0
	movff POSTDEC0,R0
; }
L18_puts_107
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_putchar>
;<?C18_puts_>
;<-> int puts(char *p@0)

;<+C18_RFputs> int RFputs(int (*p)(unsigned int )@0)
C18_RFputs
	movf PREINC0,F,0 ; reserve stack
;    int count = RFputs_(p) ;
	movlw -2
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL C18_RFputs_
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,INDF0
;    putchar('\n') ;
	movlw 10
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;    return count + 1 ;
	movff INDF0,PREINC0
	movlw 1
	addwf INDF0,F,0
	movff POSTDEC0,R0
; }
L18_RFputs_108
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_RFputs_>
;<?C18_putchar>
;<-> int RFputs(int (*p)(unsigned int )@0)

;<+C18_puts_> int puts_(char *p@0)
C18_puts_
	movf PREINC0,F,0 ; reserve stack
;    int count = 1 ;
	movlw 1
	movwf INDF0,0
; 
;    for( ; *p ; ++p)
L18_puts__110
	movlw -2
	movff PLUSW0,FSR1L
	movlw -1
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	movf POSTDEC0,W,0
	IBZ L18_puts__111
;    {
;       putchar(*p) ;
	movlw -2
	movff PLUSW0,FSR1L
	movlw -1
	movff PLUSW0,FSR1H
	movff INDF1,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       ++count ;
	incf INDF0,F,0
;    }
L18_puts__112
	movlw -2
	incf PLUSW0,F,0
	bnc L18_puts__113
	movlw -1
	incf PLUSW0,F,0
L18_puts__113
	IBRA L18_puts__110
L18_puts__111
;    return count ;
	movff INDF0,R0
; }
L18_puts__109
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_putchar>
;<-> int puts_(char *p@0)

;<+C18_RFputs_> int RFputs_(int (*p)(unsigned int )@0)
C18_RFputs_
	movf PREINC0,F,0 ; reserve stack
;    int count = 0 ;
	clrf INDF0,0
; 
;    for( ; p(count) ; ++count)
L18_RFputs__115
	movff INDF0,PREINC0
	movlw -3
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,PREINC0
	movf POSTDEC0,W,0
	IBZ L18_RFputs__116
;    {
;       putchar(p(count) );
	movff INDF0,PREINC0
	movlw -3
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;    }
L18_RFputs__117
	incf INDF0,F,0
	IBRA L18_RFputs__115
L18_RFputs__116
;    return ++count ;
	incf INDF0,F,0
	movff INDF0,R0
; }
L18_RFputs__114
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_putchar>
;<?indirect_call>
;<-> int RFputs_(int (*p)(unsigned int )@0)

;<+C18_getch> long getch()
C18_getch
	movf PREINC0,F,0 ; reserve stack
;    unsigned int c = io_getchar() ;
	movff C18_io_getchar,PREINC0
	movff C18_io_getchar+1,PREINC0
	ICALL indirect_call
	movff R0,INDF0
;    if( c == 4U || c == 26U) return (-1) ;
	movlw 1
	movwf PREINC0,0
	movlw -1
	movff PLUSW0,PREINC0
	movlw 4
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_getch_120
	movlw -1
	movff PLUSW0,PREINC0
	movlw 26
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_getch_120
	decf INDF0,F,0
L18_getch_120
	movf POSTDEC0,W,0
	IBZ L18_getch_119_endif
	setf R0+0,0
	setf R0+1,0
	IBRA L18_getch_118
;    if( c == 13 ) c = '\n' ;
L18_getch_119_endif
	movff INDF0,PREINC0
	movlw 13
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_getch_121_endif
	movlw 10
	movwf INDF0,0
;    return c ;
L18_getch_121_endif
	movff INDF0,R0
	clrf R0H,0
; }
L18_getch_118
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_io_getchar>
;<?UEQ8>
;<?indirect_call>
;<-> long getch()

;<+C18_getche> long getche()
C18_getche
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    long c = getch() ;
	ICALL C18_getch
	movlw -1
	movff R0,PLUSW0
	movff R0+1,INDF0
;    if( c != (-1)) putchar( c) ;
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	setf R0+0,0
	setf R0+1,0
	ICALL UNE16
	movf POSTDEC0,W,0
	IBZ L18_getche_123_endif
	movlw -1
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;    return c ;
L18_getche_123_endif
	movlw -1
	movff PLUSW0,R0+0
	movff INDF0,R0+1
; }
L18_getche_122
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_getch>
;<?C18_putchar>
;<?UNE16>
;<-> long getche()

;<+C18_fillbuf> unsigned int fillbuf(char *p@3,unsigned int nmax@2,int *eof_flag@0)
C18_fillbuf
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    unsigned int cpt ;
;    long c ;
; 
;    --nmax ;
	movlw -5
	decf PLUSW0,F,0
;    *eof_flag = 0 ;
	movlw -7
	movff PLUSW0,FSR1L
	movlw -6
	movff PLUSW0,FSR1H
	clrf POSTINC1,0
; 
;    for( cpt = 0 ; cpt < nmax ; )
	movlw -2
	clrf PLUSW0,0
L18_fillbuf_129
	movlw -2
	movff PLUSW0,PREINC0
	movlw -6
	movf PLUSW0,W,0
	ICALL ULT8
	movf POSTDEC0,W,0
	IBZ L18_fillbuf_130
;    {
;       c = getch() ;
	ICALL C18_getch
	movlw -1
	movff R0,PLUSW0
	movff R0+1,INDF0
; 
;       if( c == (-1) )
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	setf R0+0,0
	setf R0+1,0
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_fillbuf_128_else
;       {
;          *eof_flag = 1 ;
	movlw -7
	movff PLUSW0,FSR1L
	movlw -6
	movff PLUSW0,FSR1H
	movlw 1
	movwf POSTINC1,0
;          putchar('\n') ;
	movlw 10
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          break ;
	IBRA L18_fillbuf_130
;       }
;       else if( c == 127U && cpt >= 1U )
L18_fillbuf_128_else
	clrf PREINC0,0
	movlw -2
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw 127
	movwf R0+0,0
	clrf R0+1,0
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_fillbuf_127
	movlw -3
	movff PLUSW0,PREINC0
	movlw 1
	ICALL UGE8
	movf POSTDEC0,W,0
	IBZ L18_fillbuf_127
	incf INDF0,F,0
L18_fillbuf_127
	movf POSTDEC0,W,0
	IBZ L18_fillbuf_126_else
;       {
;          putchar(8U) ;
	movlw 8
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          putchar(' ') ;
	movlw 32
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          putchar(8U) ;
	movlw 8
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          cpt-- ;
	movlw -2
	decf PLUSW0,F,0
;       }
;       else
	IBRA L18_fillbuf_126_endif
L18_fillbuf_126_else
;       {
;          putchar( p[cpt++] = c ) ;
	movlw -1
	movff PLUSW0,PREINC0
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -6
	incf PLUSW0,F,0
	clrf PREINC0,0
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	ICALL add16
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF0,INDF1
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          if(c == '\n') break ;
	movlw -1
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw 10
	movwf R0+0,0
	clrf R0+1,0
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_fillbuf_125_endif
	IBRA L18_fillbuf_130
;       }
L18_fillbuf_125_endif
L18_fillbuf_126_endif
L18_fillbuf_128_endif
;    }
L18_fillbuf_131
	IBRA L18_fillbuf_129
L18_fillbuf_130
;    p[cpt] = 0 ;
	clrf PREINC0,0
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,R0
	clrf R0H,0
	ICALL add16
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
;    return cpt ;
	movlw -2
	movff PLUSW0,R0
; }
L18_fillbuf_124
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_getch>
;<?C18_putchar>
;<?UEQ16>
;<?UGE8>
;<?ULT8>
;<?add16>
;<-> unsigned int fillbuf(char *p@3,unsigned int nmax@2,int *eof_flag@0)

;<+C18_gets> char *gets(char *t@0)
C18_gets
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    char c , *oldt = t;
	movlw -4
	movff PLUSW0,PREINC0
	movlw -1
	movff POSTDEC0,PLUSW0
	movlw -3
	movff PLUSW0,PREINC0
	movff POSTDEC0,INDF0
; 
;    while( (c = getchar()) != '\n')
L18_gets_133_while
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -3
	movff INDF0,PLUSW0
	movlw 10
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_gets_133_exit
;       * t++ = c ;
	movlw -2
	movff PLUSW0,PREINC0
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -7
	incf PLUSW0,F,0
	bnc L18_gets_134
	movlw -6
	incf PLUSW0,F,0
L18_gets_134
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
	IBRA L18_gets_133_while
L18_gets_133_exit
;    *t = 0 ;
	movlw -4
	movff PLUSW0,FSR1L
	movlw -3
	movff PLUSW0,FSR1H
	clrf POSTINC1,0
;    return oldt ;
	movlw -1
	movff PLUSW0,R0+0
	movff INDF0,R0+1
; }
L18_gets_132
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_getchar>
;<?UNE8>
;<-> char *gets(char *t@0)

;<+C18_getchar> long getchar()
C18_getchar
;    if (io_count <= 0 && io_status != 1)
	clrf PREINC0,0
	movff C18_io_count,WREG
	ICALL LE8ZERO
	movf POSTDEC0,W,0
	IBZ L18_getchar_137
	movff C18_io_status,PREINC0
	movlw 1
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_getchar_137
	incf INDF0,F,0
L18_getchar_137
	movf POSTDEC0,W,0
	IBZ L18_getchar_136_endif
;       io_count = fillbuf(io_ptr = io_buf, 80 , &io_status);
	movlw LOW ( C18_io_status ) 
	movwf PREINC0,0
	movlw HIGH ( C18_io_status ) 
	movwf PREINC0,0
	movlw 80
	movwf PREINC0,0
	movlw LOW ( C18_io_buf ) 
	movwf PREINC0,0
	movlw HIGH ( C18_io_buf ) 
	movwf PREINC0,0
	movlw -1
	movff PLUSW0,C18_io_ptr+0
	movff INDF0,C18_io_ptr+1
	ICALL C18_fillbuf
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movff POSTDEC0,C18_io_count
; 
; 
; 
;    return io_count <= 0 ? (io_status = 0, (-1))
L18_getchar_136_endif
;           : (--io_count, (*io_ptr++) );
	movff C18_io_count,WREG
	ICALL LE8ZERO
	movf POSTDEC0,W,0
	IBZ L18_getchar_139
	movlb HIGH ( C18_io_status+0 ) 
	clrf C18_io_status+0,1
	setf PREINC0,0
	IBRA L18_getchar_138
L18_getchar_139
	movlb HIGH ( C18_io_count ) 
	decf C18_io_count,F,1
	movff C18_io_ptr,PREINC0
	movff C18_io_ptr+1,PREINC0
	movlb HIGH ( C18_io_ptr ) 
	incf C18_io_ptr,F,1
	movlb HIGH ( C18_io_ptr+1 ) 
	movlw 0
	addwfc C18_io_ptr+1,F,1
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
L18_getchar_138
	ICALL cast8_16
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
; 
; }
L18_getchar_135
	return 0
;<?C18_fillbuf>
;<?C18_io_buf>
;<?C18_io_count>
;<?C18_io_ptr>
;<?C18_io_status>
;<?LE8ZERO>
;<?UNE8>
;<?cast8_16>
;<-> long getchar()

;<+C18_ungetchar> long ungetchar(long c@0)
C18_ungetchar
;    if (io_count < 80 && c != (-1))
	clrf PREINC0,0
	movff C18_io_count,PREINC0
	movlw 80
	ICALL LT8
	movf POSTDEC0,W,0
	IBZ L18_ungetchar_142
	movlw -2
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	setf R0+0,0
	setf R0+1,0
	ICALL UNE16
	movf POSTDEC0,W,0
	IBZ L18_ungetchar_142
	incf INDF0,F,0
L18_ungetchar_142
	movf POSTDEC0,W,0
	IBZ L18_ungetchar_141_endif
;    {
;       ++io_count;
	movlb HIGH ( C18_io_count ) 
	incf C18_io_count,F,1
;       return *--io_ptr = c;
	movlw -1
	movff PLUSW0,PREINC0
	movlb HIGH ( C18_io_ptr ) 
	decf C18_io_ptr,F,1
	movlb HIGH ( C18_io_ptr+1 ) 
	movlw 0
	subwfb C18_io_ptr+1,F,1
	movff C18_io_ptr,FSR1L
	movff C18_io_ptr+1,FSR1H
	movff INDF0,INDF1
	ICALL cast8_16
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	IBRA L18_ungetchar_140
;    }
;    return (-1);
L18_ungetchar_141_endif
	setf R0+0,0
	setf R0+1,0
; }
L18_ungetchar_140
	return 0
;<?C18_io_count>
;<?C18_io_ptr>
;<?LT8>
;<?UNE16>
;<?cast8_16>
;<-> long ungetchar(long c@0)

;<+C18_scanf> int scanf(char *f@0, ... )
C18_scanf
; ---  non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 14
	addwf FSR0L,F,0
	movlw 0
	addwfc FSR0H,F,0  ; reserve stack
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
;    char **arg = &f;
	movlw 15
	ICALL pushLOCALNEGADDR
	movlw -13
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
;    int c, neg, cnt ;
;    int n ;
;    long k ;
;    char *p ;
;    long long k32 ;
; 
; 
;    for (n = 0 ; c = *f++ ; )
	movlw -8
	clrf PLUSW0,0
L18_scanf_166
	movlw -15
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -17
	incf PLUSW0,F,0
	bnc L18_scanf_169
	movlw -16
	incf PLUSW0,F,0
L18_scanf_169
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff INDF1,PREINC0
	movlw -12
	movff INDF0,PLUSW0
	movf POSTDEC0,W,0
	IBZ L18_scanf_167
;    {
;       if (c != '%')
	movlw -11
	movff PLUSW0,PREINC0
	movlw 37
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_scanf_165_else
;       {
;          k = getchar();
	ICALL C18_getchar
	movlw -7
	movff R0,PLUSW0
	movlw -6
	movff R0+1,PLUSW0
;          if (c != (int)k)
	movlw -11
	movff PLUSW0,PREINC0
	movlw -8
	movf PLUSW0,W,0
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_scanf_144_endif
;             return n;
	movlw -8
	movff PLUSW0,R0
	IBRA L18_scanf_143
;       }
L18_scanf_144_endif
;       else
	IBRA L18_scanf_165_endif
L18_scanf_165_else
;       {
;          c = *f++ ;
	movlw -15
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -17
	incf PLUSW0,F,0
	bnc L18_scanf_170
	movlw -16
	incf PLUSW0,F,0
L18_scanf_170
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movlw -11
	movff INDF1,PLUSW0
;          {
;             if( c == 0)
	movf PLUSW0,F,0
	IBNZ L18_scanf_164_else
;                return n;
	movlw -8
	movff PLUSW0,R0
	IBRA L18_scanf_143
;             else if( c == 'c')
	IBRA L18_scanf_164_endif
L18_scanf_164_else
	movlw -11
	movff PLUSW0,PREINC0
	movlw 99
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_scanf_163_else
;             {
;                k = getchar() ;
	ICALL C18_getchar
	movlw -7
	movff R0,PLUSW0
	movlw -6
	movff R0+1,PLUSW0
;                if( k == (-1) ) break ;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	setf R0+0,0
	setf R0+1,0
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_scanf_145_endif
	IBRA L18_scanf_167
;                --arg ;
L18_scanf_145_endif
	movlw 13
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                **arg = k ;
	movlw -7
	movff PLUSW0,PREINC0
	movlw -14
	movff PLUSW0,FSR1L
	movlw -13
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
;                ++n;
	movlw -8
	incf PLUSW0,F,0
;             }
;             else if(c == 'd' || c == 'u')
	IBRA L18_scanf_163_endif
L18_scanf_163_else
	movlw 1
	movwf PREINC0,0
	movlw -12
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_scanf_162
	movlw -12
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_scanf_162
	decf INDF0,F,0
L18_scanf_162
	movf POSTDEC0,W,0
	IBZ L18_scanf_161_else
;             {
;                if( getlong(&k, 10) == 0) break ;
	movlw 10
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_scanf_146_endif
	IBRA L18_scanf_167
;                --arg ;
L18_scanf_146_endif
	movlw 13
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                *((int *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movlw -14
	movff PLUSW0,FSR1L
	movlw -13
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
;                ++n;
	movlw -8
	incf PLUSW0,F,0
;             }
;             else if(c == 'x' )
	IBRA L18_scanf_161_endif
L18_scanf_161_else
	movlw -11
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_scanf_160_else
;             {
;                if( getlong(&k, 16) == 0) break ;
	movlw 16
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_scanf_147_endif
	IBRA L18_scanf_167
;                --arg ;
L18_scanf_147_endif
	movlw 13
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                *((int *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movlw -14
	movff PLUSW0,FSR1L
	movlw -13
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
;                ++n;
	movlw -8
	incf PLUSW0,F,0
;             }
;             else if( c == 'l')
	IBRA L18_scanf_160_endif
L18_scanf_160_else
	movlw -11
	movff PLUSW0,PREINC0
	movlw 108
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_scanf_159_else
;             {
;                c = *f++ ;
	movlw -15
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -17
	incf PLUSW0,F,0
	bnc L18_scanf_171
	movlw -16
	incf PLUSW0,F,0
L18_scanf_171
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movlw -11
	movff INDF1,PLUSW0
;                if(c == 'd' || c == 'u')
	movlw 1
	movwf PREINC0,0
	movlw -12
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_scanf_152
	movlw -12
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_scanf_152
	decf INDF0,F,0
L18_scanf_152
	movf POSTDEC0,W,0
	IBZ L18_scanf_151_else
;                {
;                   if( getlong(&k, 10) == 0) break ;
	movlw 10
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_scanf_148_endif
	IBRA L18_scanf_167
;                   --arg ;
L18_scanf_148_endif
	movlw 13
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                   *((long *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -15
	movff PLUSW0,FSR1L
	movlw -14
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,PREINC1
	movf POSTDEC1,F,0 ; just decr
	movff POSTDEC0,INDF1
;                   ++n;
	movlw -8
	incf PLUSW0,F,0
;                }
;                else if(c == 'x')
	IBRA L18_scanf_151_endif
L18_scanf_151_else
	movlw -11
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_scanf_150_endif
;                {
;                   if( getlong(&k, 16) == 0) break ;
	movlw 16
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_scanf_149_endif
	IBRA L18_scanf_167
;                   --arg ;
L18_scanf_149_endif
	movlw 13
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                   *((long *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -15
	movff PLUSW0,FSR1L
	movlw -14
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,PREINC1
	movf POSTDEC1,F,0 ; just decr
	movff POSTDEC0,INDF1
;                   ++n;
	movlw -8
	incf PLUSW0,F,0
;                }
;             }
L18_scanf_150_endif
L18_scanf_151_endif
;             else if (c == 's')
	IBRA L18_scanf_159_endif
L18_scanf_159_else
	movlw -11
	movff PLUSW0,PREINC0
	movlw 115
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_scanf_158_endif
;             {
;                --arg ;
	movlw 13
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                skipwchar() ;
	ICALL C18_skipwchar
;                for( p = *arg ; ((k = getchar()) != (-1)) && !isblank(k) ; ++p) *p = k ;
	movlw -13
	movff PLUSW0,FSR1L
	movlw -12
	movff PLUSW0,FSR1H
	movlw -5
	movff POSTINC1,PLUSW0
	movlw -4
	movff POSTDEC1,PLUSW0
L18_scanf_153
	clrf PREINC0,0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	movlw -9
	movff INDF0,PLUSW0
	movlw -1
	movff PLUSW0,PRODL
	movlw -10
	movff PRODL,PLUSW0
	setf R0+0,0
	setf R0+1,0
	ICALL UNE16
	movf POSTDEC0,W,0
	IBZ L18_scanf_156
	movlw -8
	movff PLUSW0,PREINC0
	ICALL C18_isblank
	movff R0,INDF0
	ICALL lnot8
	movf POSTDEC0,W,0
	IBZ L18_scanf_156
	incf INDF0,F,0
L18_scanf_156
	movf POSTDEC0,W,0
	IBZ L18_scanf_154
	movlw -7
	movff PLUSW0,PREINC0
	movlw -6
	movff PLUSW0,FSR1L
	movlw -5
	movff PLUSW0,FSR1H
	movff POSTDEC0,INDF1
L18_scanf_155
	movlw -5
	incf PLUSW0,F,0
	bnc L18_scanf_172
	movlw -4
	incf PLUSW0,F,0
L18_scanf_172
	IBRA L18_scanf_153
L18_scanf_154
;                ungetchar(k) ;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
;                *p = 0 ;
	movlw -5
	movff PLUSW0,FSR1L
	movlw -4
	movff PLUSW0,FSR1H
	clrf POSTINC1,0
;                if( p == *arg) break ;
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -15
	movff PLUSW0,FSR1L
	movlw -14
	movff PLUSW0,FSR1H
	movff POSTINC1,R0
	movff POSTDEC1,R0+1
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_scanf_157_endif
	IBRA L18_scanf_167
;                ++n ;
L18_scanf_157_endif
	movlw -8
	incf PLUSW0,F,0
;             }
;          }
L18_scanf_158_endif
L18_scanf_159_endif
L18_scanf_160_endif
L18_scanf_161_endif
L18_scanf_163_endif
L18_scanf_164_endif
;       }
L18_scanf_165_endif
;    }
L18_scanf_168
	IBRA L18_scanf_166
L18_scanf_167
;    return n;
	movlw -8
	movff PLUSW0,R0
; }
L18_scanf_143
; --- non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 14
	subwf FSR0L,F,0
	movlw 0
	subwfb FSR0H,F,0 ; clean stack 
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
	return 0
;<?C18_getchar>
;<?C18_getlong>
;<?C18_isblank>
;<?C18_skipwchar>
;<?C18_ungetchar>
;<?UEQ16>
;<?UEQ8>
;<?UNE16>
;<?UNE8>
;<?getLOCALNEGADDR>
;<?lnot8>
;<?pushLOCALNEGADDR>
;<-> int scanf(char *f@0, ... )

;<+C18_RFscanf> int RFscanf(int (*f)(unsigned int )@0, ... )
C18_RFscanf
; ---  non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 15
	addwf FSR0L,F,0
	movlw 0
	addwfc FSR0H,F,0  ; reserve stack
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
;    char **arg = (char **) & f;
	movlw 16
	ICALL pushLOCALNEGADDR
	movlw -14
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
;    int c, neg, cnt, kf ;
;    int n ;
;    long k ;
;    char *p ;
;    long long k32 ;
; 
; 
;    for (kf = 0, n = 0 ; c = f(kf++) ; )
	movlw -9
	clrf PLUSW0,0
	movlw -8
	clrf PLUSW0,0
L18_RFscanf_196
	movlw -9
	movff PLUSW0,PREINC0
	movlw -10
	incf PLUSW0,F,0
	movlw -17
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,PREINC0
	movlw -13
	movff INDF0,PLUSW0
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_197
;    {
;       if (c != '%')
	movlw -12
	movff PLUSW0,PREINC0
	movlw 37
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_195_else
;       {
;          k = getchar();
	ICALL C18_getchar
	movlw -7
	movff R0,PLUSW0
	movlw -6
	movff R0+1,PLUSW0
;          if (c != (int)k)
	movlw -12
	movff PLUSW0,PREINC0
	movlw -8
	movf PLUSW0,W,0
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_174_endif
;             return n;
	movlw -8
	movff PLUSW0,R0
	IBRA L18_RFscanf_173
;       }
L18_RFscanf_174_endif
;       else
	IBRA L18_RFscanf_195_endif
L18_RFscanf_195_else
;       {
;          c = f(kf++) ;
	movlw -9
	movff PLUSW0,PREINC0
	movlw -10
	incf PLUSW0,F,0
	movlw -17
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movlw -12
	movff R0,PLUSW0
;          {
;             if( c == 0)
	movf PLUSW0,F,0
	IBNZ L18_RFscanf_194_else
;                return n;
	movlw -8
	movff PLUSW0,R0
	IBRA L18_RFscanf_173
;             else if( c == 'c')
	IBRA L18_RFscanf_194_endif
L18_RFscanf_194_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 99
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_193_else
;             {
;                k = getchar() ;
	ICALL C18_getchar
	movlw -7
	movff R0,PLUSW0
	movlw -6
	movff R0+1,PLUSW0
;                if( k == (-1) ) break ;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	setf R0+0,0
	setf R0+1,0
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_175_endif
	IBRA L18_RFscanf_197
;                --arg ;
L18_RFscanf_175_endif
	movlw 14
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                **arg = k ;
	movlw -7
	movff PLUSW0,PREINC0
	movlw -15
	movff PLUSW0,FSR1L
	movlw -14
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
;                ++n;
	movlw -8
	incf PLUSW0,F,0
;             }
;             else if(c == 'd' || c == 'u')
	IBRA L18_RFscanf_193_endif
L18_RFscanf_193_else
	movlw 1
	movwf PREINC0,0
	movlw -13
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_192
	movlw -13
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_192
	decf INDF0,F,0
L18_RFscanf_192
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_191_else
;             {
;                if( getlong(&k, 10) == 0) break ;
	movlw 10
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_176_endif
	IBRA L18_RFscanf_197
;                --arg ;
L18_RFscanf_176_endif
	movlw 14
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                *((int *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movlw -15
	movff PLUSW0,FSR1L
	movlw -14
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
;                ++n;
	movlw -8
	incf PLUSW0,F,0
;             }
;             else if(c == 'x' )
	IBRA L18_RFscanf_191_endif
L18_RFscanf_191_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_190_else
;             {
;                if( getlong(&k, 16) == 0) break ;
	movlw 16
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_177_endif
	IBRA L18_RFscanf_197
;                --arg ;
L18_RFscanf_177_endif
	movlw 14
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                *((int *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movlw -15
	movff PLUSW0,FSR1L
	movlw -14
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,INDF1
;                ++n;
	movlw -8
	incf PLUSW0,F,0
;             }
;             else if( c == 'l')
	IBRA L18_RFscanf_190_endif
L18_RFscanf_190_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 108
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_189_else
;             {
;                c = f(kf++) ;
	movlw -9
	movff PLUSW0,PREINC0
	movlw -10
	incf PLUSW0,F,0
	movlw -17
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL indirect_call
	movf POSTDEC0,F,0 ; clean stack 
	movlw -12
	movff R0,PLUSW0
;                if(c == 'd' || c == 'u')
	movlw 1
	movwf PREINC0,0
	movlw -13
	movff PLUSW0,PREINC0
	movlw 100
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_182
	movlw -13
	movff PLUSW0,PREINC0
	movlw 117
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_182
	decf INDF0,F,0
L18_RFscanf_182
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_181_else
;                {
;                   if( getlong(&k, 10) == 0) break ;
	movlw 10
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_178_endif
	IBRA L18_RFscanf_197
;                   --arg ;
L18_RFscanf_178_endif
	movlw 14
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                   *((long *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,PREINC1
	movf POSTDEC1,F,0 ; just decr
	movff POSTDEC0,INDF1
;                   ++n;
	movlw -8
	incf PLUSW0,F,0
;                }
;                else if(c == 'x')
	IBRA L18_RFscanf_181_endif
L18_RFscanf_181_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 120
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_180_endif
;                {
;                   if( getlong(&k, 16) == 0) break ;
	movlw 16
	movwf PREINC0,0
	movlw 8
	ICALL pushLOCALNEGADDR
	ICALL C18_getlong
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBNZ L18_RFscanf_179_endif
	IBRA L18_RFscanf_197
;                   --arg ;
L18_RFscanf_179_endif
	movlw 14
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                   *((long *)*arg) = k;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff POSTINC1,PREINC0
	movff POSTDEC1,PREINC0
	movff POSTDEC0,FSR1H
	movff POSTDEC0,FSR1L
	movff POSTDEC0,PREINC1
	movf POSTDEC1,F,0 ; just decr
	movff POSTDEC0,INDF1
;                   ++n;
	movlw -8
	incf PLUSW0,F,0
;                }
;             }
L18_RFscanf_180_endif
L18_RFscanf_181_endif
;             else if (c == 's')
	IBRA L18_RFscanf_189_endif
L18_RFscanf_189_else
	movlw -12
	movff PLUSW0,PREINC0
	movlw 115
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_188_endif
;             {
;                --arg ;
	movlw 14
	ICALL getLOCALNEGADDR
	movlw 2
	subwf POSTINC1,F,0
	movlw 0
	subwfb POSTDEC1,F,0
;                skipwchar() ;
	ICALL C18_skipwchar
;                for( p = *arg ; ((k = getchar()) != (-1)) && !isblank(k) ; ++p) *p = k ;
	movlw -14
	movff PLUSW0,FSR1L
	movlw -13
	movff PLUSW0,FSR1H
	movlw -5
	movff POSTINC1,PLUSW0
	movlw -4
	movff POSTDEC1,PLUSW0
L18_RFscanf_183
	clrf PREINC0,0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	movlw -9
	movff INDF0,PLUSW0
	movlw -1
	movff PLUSW0,PRODL
	movlw -10
	movff PRODL,PLUSW0
	setf R0+0,0
	setf R0+1,0
	ICALL UNE16
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_186
	movlw -8
	movff PLUSW0,PREINC0
	ICALL C18_isblank
	movff R0,INDF0
	ICALL lnot8
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_186
	incf INDF0,F,0
L18_RFscanf_186
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_184
	movlw -7
	movff PLUSW0,PREINC0
	movlw -6
	movff PLUSW0,FSR1L
	movlw -5
	movff PLUSW0,FSR1H
	movff POSTDEC0,INDF1
L18_RFscanf_185
	movlw -5
	incf PLUSW0,F,0
	bnc L18_RFscanf_199
	movlw -4
	incf PLUSW0,F,0
L18_RFscanf_199
	IBRA L18_RFscanf_183
L18_RFscanf_184
;                ungetchar(k) ;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
;                *p = 0 ;
	movlw -5
	movff PLUSW0,FSR1L
	movlw -4
	movff PLUSW0,FSR1H
	clrf POSTINC1,0
;                if( p == *arg) break ;
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	movff POSTINC1,R0
	movff POSTDEC1,R0+1
	ICALL UEQ16
	movf POSTDEC0,W,0
	IBZ L18_RFscanf_187_endif
	IBRA L18_RFscanf_197
;                ++n ;
L18_RFscanf_187_endif
	movlw -8
	incf PLUSW0,F,0
;             }
;          }
L18_RFscanf_188_endif
L18_RFscanf_189_endif
L18_RFscanf_190_endif
L18_RFscanf_191_endif
L18_RFscanf_193_endif
L18_RFscanf_194_endif
;       }
L18_RFscanf_195_endif
;    }
L18_RFscanf_198
	IBRA L18_RFscanf_196
L18_RFscanf_197
;    return n;
	movlw -8
	movff PLUSW0,R0
; }
L18_RFscanf_173
; --- non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 15
	subwf FSR0L,F,0
	movlw 0
	subwfb FSR0H,F,0 ; clean stack 
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
	return 0
;<?C18_getchar>
;<?C18_getlong>
;<?C18_isblank>
;<?C18_skipwchar>
;<?C18_ungetchar>
;<?UEQ16>
;<?UEQ8>
;<?UNE16>
;<?UNE8>
;<?getLOCALNEGADDR>
;<?indirect_call>
;<?lnot8>
;<?pushLOCALNEGADDR>
;<-> int RFscanf(int (*f)(unsigned int )@0, ... )

;<+C18_skipwchar> void skipwchar()
C18_skipwchar
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    long k;
; 
;    while ( isblank(k = getchar()) ) ;
L18_skipwchar_201_while
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	movlw -2
	movff INDF0,PLUSW0
	movlw -1
	movff PLUSW0,PRODL
	movlw -3
	movff PRODL,PLUSW0
	clrf POSTDEC0,0
	ICALL C18_isblank
	movff R0,INDF0
	movf POSTDEC0,W,0
	IBZ L18_skipwchar_201_exit
	IBRA L18_skipwchar_201_while
L18_skipwchar_201_exit
;    ungetchar(k);
	movlw -1
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
; }
L18_skipwchar_200
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_getchar>
;<?C18_isblank>
;<?C18_ungetchar>
;<-> void skipwchar()

;<+C18_isblank> int isblank(int c@0)
C18_isblank
;    return c == ' ' || c == '\n' || c == '\t' ;
	movlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	movlw -2
	movff PLUSW0,PREINC0
	movlw 32
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_isblank_204
	movlw -2
	movff PLUSW0,PREINC0
	movlw 10
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_isblank_204
	decf INDF0,F,0
L18_isblank_204
	movf POSTDEC0,W,0
	IBNZ L18_isblank_203
	movlw -1
	movff PLUSW0,PREINC0
	movlw 9
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_isblank_203
	decf INDF0,F,0
L18_isblank_203
	movff POSTDEC0,R0
; }
L18_isblank_202
	return 0
;<?UEQ8>
;<-> int isblank(int c@0)

;<+C18_getlong> int getlong(long *pn@1,int base@0)
C18_getlong
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    long r ;
;    int c, cnt, k , neg;
; 
;    skipwchar();
	ICALL C18_skipwchar
;    k = getchar() ;
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -1
	movff POSTDEC0,PLUSW0
;    if( k == (-1) ) return 0 ;
	movff PLUSW0,PREINC0
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_getlong_206_endif
	clrf R0,0
	IBRA L18_getlong_205
;    neg = (k == '-') ? 1 : (ungetchar(k), 0);
L18_getlong_206_endif
	movlw -1
	movff PLUSW0,PREINC0
	movlw 45
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_getlong_208
	movlw 1
	movwf PREINC0,0
	IBRA L18_getlong_207
L18_getlong_208
	movlw -1
	movff PLUSW0,PREINC0
	ICALL cast8_16
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	clrf PREINC0,0
L18_getlong_207
	movff POSTDEC0,INDF0
;    for (cnt = r = 0 ; (k = digit(c = getchar(), base)) != -1 ; ++cnt)
	clrf PREINC0,0
	clrf PREINC0,0
	movlw -6
	movff INDF0,PLUSW0
	movlw -1
	movff PLUSW0,PRODL
	movlw -7
	movff PRODL,PLUSW0
	clrf POSTDEC0,0
	movlw -2
	movff POSTDEC0,PLUSW0
L18_getlong_209
	movlw -8
	movff PLUSW0,PREINC0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -5
	movff INDF0,PLUSW0
	ICALL C18_digit
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movlw -2
	movff INDF0,PLUSW0
	movlw -1
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_getlong_210
;    {
;       r = (r * base) + k ;
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -10
	movff PLUSW0,R0
	clrf R0H,0
	btfsc R0L,7,0
	setf R0H,0
	ICALL mul16
	movlw -3
	movff PLUSW0,R0
	clrf R0H,0
	btfsc R0L,7,0
	setf R0H,0
	ICALL add16
	movlw -5
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
;    }
L18_getlong_211
	movlw -2
	incf PLUSW0,F,0
	IBRA L18_getlong_209
L18_getlong_210
;    ungetchar(c) ;
	movlw -3
	movff PLUSW0,PREINC0
	ICALL cast8_16
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
;    if (cnt == 0) return 0 ;
	movlw -2
	movf PLUSW0,F,0
	IBNZ L18_getlong_212_endif
	clrf R0,0
	IBRA L18_getlong_205
;    *pn = neg ? - r : r ;
L18_getlong_212_endif
	movf INDF0,F,0
	IBZ L18_getlong_214
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL neg16
	IBRA L18_getlong_213
L18_getlong_214
	movlw -5
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
L18_getlong_213
	movlw -9
	movff PLUSW0,FSR1L
	movlw -8
	movff PLUSW0,FSR1H
	movff POSTDEC0,PREINC1
	movf POSTDEC1,F,0 ; just decr
	movff POSTDEC0,INDF1
;    return 1 ;
	movlw 1
	movwf R0,0
; }
L18_getlong_205
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_digit>
;<?C18_getchar>
;<?C18_skipwchar>
;<?C18_ungetchar>
;<?UEQ8>
;<?UNE8>
;<?add16>
;<?cast8_16>
;<?mul16>
;<?neg16>
;<-> int getlong(long *pn@1,int base@0)

;<+C18_getlong32> int getlong32(long32 *pn@1,int base@0)
C18_getlong32
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
	movf PREINC0,F,0 ; reserve stack
;    unsigned long long r ;
;    int c, cnt, k , neg;
; 
;    skipwchar();
	ICALL C18_skipwchar
;    k = getchar() ;
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -1
	movff POSTDEC0,PLUSW0
;    if( k == (-1) ) return 0 ;
	movff PLUSW0,PREINC0
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_getlong32_216_endif
	clrf R0,0
	IBRA L18_getlong32_215
;    neg = (k == '-') ? 1 : (ungetchar(k), 0);
L18_getlong32_216_endif
	movlw -1
	movff PLUSW0,PREINC0
	movlw 45
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_getlong32_218
	movlw 1
	movwf PREINC0,0
	IBRA L18_getlong32_217
L18_getlong32_218
	movlw -1
	movff PLUSW0,PREINC0
	ICALL cast8_16
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	clrf PREINC0,0
L18_getlong32_217
	movff POSTDEC0,INDF0
;    for (cnt = 0, r = 0; (k = digit(c = getchar(), base)) != -1 ; ++cnt)
	movlw -2
	clrf PLUSW0,0
	movlw -7
	clrf PLUSW0,0
	movlw -6
	clrf PLUSW0,0
	movlw -5
	clrf PLUSW0,0
	movlw -4
	clrf PLUSW0,0
L18_getlong32_219
	movlw -10
	movff PLUSW0,PREINC0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -5
	movff INDF0,PLUSW0
	ICALL C18_digit
	movf POSTDEC0,F,0 ; clean stack 
	movff R0,INDF0
	movlw -2
	movff INDF0,PLUSW0
	movlw -1
	ICALL UNE8
	movf POSTDEC0,W,0
	IBZ L18_getlong32_220
;    {
;       r = (r * base) + k ;
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -14
	movff PLUSW0,PREINC0
	ICALL cast8_32
	movff POSTDEC0,R0+3
	movff POSTDEC0,R0+2
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	ICALL mul32
	movlw -5
	movff PLUSW0,PREINC0
	ICALL cast8_32
	movff POSTDEC0,R0+3
	movff POSTDEC0,R0+2
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	ICALL add32
	movlw -7
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
;    }
L18_getlong32_221
	movlw -2
	incf PLUSW0,F,0
	IBRA L18_getlong32_219
L18_getlong32_220
;    ungetchar(c) ;
	movlw -3
	movff PLUSW0,PREINC0
	ICALL cast8_16
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
;    if (cnt == 0) return 0 ;
	movlw -2
	movf PLUSW0,F,0
	IBNZ L18_getlong32_222_endif
	clrf R0,0
	IBRA L18_getlong32_215
;    *pn = neg ? -r : r ;
L18_getlong32_222_endif
	movf INDF0,F,0
	IBZ L18_getlong32_224
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL neg32
	IBRA L18_getlong32_223
L18_getlong32_224
	movlw -7
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
L18_getlong32_223
	movlw -13
	movff PLUSW0,FSR1L
	movlw -12
	movff PLUSW0,FSR1H
	movlw 4
L18_getlong32_225
	decf WREG,F,0
	movff POSTDEC0,PLUSW1
	bnz L18_getlong32_225
;    return 1 ;
	movlw 1
	movwf R0,0
; }
L18_getlong32_215
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
	return 0
;<?C18_digit>
;<?C18_getchar>
;<?C18_skipwchar>
;<?C18_ungetchar>
;<?UEQ8>
;<?UNE8>
;<?add32>
;<?cast8_16>
;<?cast8_32>
;<?mul32>
;<?neg32>
;<-> int getlong32(long32 *pn@1,int base@0)

;<+C18_digit> int digit(char c@1,int base@0)
C18_digit
;    if( c >= '0' && c <= '9')
	clrf PREINC0,0
	movlw -1
	movff PLUSW0,PREINC0
	movlw 48
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_digit_232
	movlw -1
	movff PLUSW0,PREINC0
	movlw 57
	ICALL LE8
	movf POSTDEC0,W,0
	IBZ L18_digit_232
	incf INDF0,F,0
L18_digit_232
	movf POSTDEC0,W,0
	IBZ L18_digit_231_else
;       c -= '0' ;
	movlw 0
	ICALL getLOCALNEGADDR
	movlw 48
	subwf INDF1,F,0
;    else if( c >= 'a' && c <= 'z')
	IBRA L18_digit_231_endif
L18_digit_231_else
	clrf PREINC0,0
	movlw -1
	movff PLUSW0,PREINC0
	movlw 97
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_digit_230
	movlw -1
	movff PLUSW0,PREINC0
	movlw 122
	ICALL LE8
	movf POSTDEC0,W,0
	IBZ L18_digit_230
	incf INDF0,F,0
L18_digit_230
	movf POSTDEC0,W,0
	IBZ L18_digit_229_else
;       c -= 'a' - 10 ;
	movlw 0
	ICALL getLOCALNEGADDR
	movlw 87
	subwf INDF1,F,0
;    else if( c >= 'A' && c <= 'Z')
	IBRA L18_digit_229_endif
L18_digit_229_else
	clrf PREINC0,0
	movlw -1
	movff PLUSW0,PREINC0
	movlw 65
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_digit_228
	movlw -1
	movff PLUSW0,PREINC0
	movlw 90
	ICALL LE8
	movf POSTDEC0,W,0
	IBZ L18_digit_228
	incf INDF0,F,0
L18_digit_228
	movf POSTDEC0,W,0
	IBZ L18_digit_227_else
;       c -= 'A' - 10 ;
	movlw 0
	ICALL getLOCALNEGADDR
	movlw 55
	subwf INDF1,F,0
;    else
	IBRA L18_digit_227_endif
L18_digit_227_else
;       c = -1 ;
	setf INDF0,0
L18_digit_227_endif
L18_digit_229_endif
L18_digit_231_endif
; 
;    if( c >= base) c = -1 ;
	movff INDF0,PREINC0
	movlw -2
	movf PLUSW0,W,0
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_digit_233_endif
	setf INDF0,0
; 
;    return c ;
L18_digit_233_endif
	movff INDF0,R0
; }
L18_digit_226
	return 0
;<?GE8>
;<?LE8>
;<?getLOCALNEGADDR>
;<-> int digit(char c@1,int base@0)

;<+C18__RIputs_> int _RIputs_()
C18__RIputs_
; 
;    __asm__(" bsf 	EECON1,EEPGD,0") ; __asm__(" bcf 	EECON1,CFGS,0") ; __asm__(" movff TOSU,TBLPTRU") ; __asm__(" movff TOSH,TBLPTRH") ; __asm__(" movff TOSL,TBLPTRL") ; ;
 bsf 	EECON1,EEPGD,0
 bcf 	EECON1,CFGS,0
 movff TOSU,TBLPTRU
 movff TOSH,TBLPTRH
 movff TOSL,TBLPTRL
;    __asm__(" TBLRD *+") ; __asm__(" movff TABLAT,PRODL") ; ;
 TBLRD *+
 movff TABLAT,PRODL
;    while( prodl )
L18__RIputs__235_while
	movf  C18_prodl,W,0
	IBZ L18__RIputs__235_exit
;    {
;       putchar( prodl ) ;
	movff C18_prodl,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       __asm__(" TBLRD *+") ; __asm__(" movff TABLAT,PRODL") ; ;
 TBLRD *+
 movff TABLAT,PRODL
;    }
	IBRA L18__RIputs__235_while
L18__RIputs__235_exit
;    __asm__(" btfsc TBLPTRL,0,0") ; __asm__(" TBLRD *+ ; an extra read, just for alignment") ; __asm__(" movf TBLPTRU,W,0") ; __asm__(" movwf TOSU,0") ; __asm__(" movf TBLPTRH,W,0") ; __asm__(" movwf TOSH,0") ; __asm__(" movf TBLPTRL,W,0") ; __asm__(" movwf TOSL,0") ; ;
 btfsc TBLPTRL,0,0
 TBLRD *+ ; an extra read, just for alignment
 movf TBLPTRU,W,0
 movwf TOSU,0
 movf TBLPTRH,W,0
 movwf TOSH,0
 movf TBLPTRL,W,0
 movwf TOSL,0
;    return 0 ;
	clrf R0,0
; }
L18__RIputs__234
	return 0
;<?C18_prodl>
;<?C18_putchar>
;<-> int _RIputs_()

;<+C18_putfloat> int putfloat(float x@2,int prec@1,int format@0)
C18_putfloat
; ---  non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 10
	addwf FSR0L,F,0
	movlw 0
	addwfc FSR0H,F,0  ; reserve stack
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
;    int ie, i, k, ndig, estyle, cnt ;
;    float y;
; 
; 
;    cnt = 0 ;
	movlw -4
	clrf PLUSW0,0
;    ndig = ( prec < 0) ? 7 : (prec > 6 ? 7 : prec + 1);
	movlw -14
	movf PLUSW0,W,0
	clrf PREINC0,0
	btfsc WREG,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_putfloat_238
	movlw 7
	movwf PREINC0,0
	IBRA L18_putfloat_237
L18_putfloat_238
	movlw -14
	movff PLUSW0,PREINC0
	movlw 6
	ICALL GT8
	movf POSTDEC0,W,0
	IBZ L18_putfloat_240
	movlw 7
	movwf PREINC0,0
	IBRA L18_putfloat_239
L18_putfloat_240
	movlw -14
	movff PLUSW0,PREINC0
	movlw 1
	addwf INDF0,F,0
L18_putfloat_239
L18_putfloat_237
	movlw -6
	movff POSTDEC0,PLUSW0
;    estyle = (format == 'e' || format == 'E') ;
	movlw 1
	movwf PREINC0,0
	movlw -16
	movff PLUSW0,PREINC0
	movlw 101
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_putfloat_241
	movlw -16
	movff PLUSW0,PREINC0
	movlw 69
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_putfloat_241
	decf INDF0,F,0
L18_putfloat_241
	movlw -5
	movff POSTDEC0,PLUSW0
; 
;    ie = 0;
	movlw -9
	clrf PLUSW0,0
; 
;    if ( x < 0)
	movlw -13
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	clrf R0+2,0
	clrf R0+3,0
	ICALL ltFP
	movf POSTDEC0,W,0
	IBZ L18_putfloat_242_endif
;    {
;       putchar( '-' );
	movlw 45
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       ++cnt ;
	movlw -4
	incf PLUSW0,F,0
;       x = -x;
	movlw -13
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	btg INDF0,7,0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
;    }
; 
; 
;    if (x != 0.0)
L18_putfloat_242_endif
	movlw 13
	ICALL getLOCALNEGADDR
	movf POSTINC1,W,0
	iorwf POSTINC1,W,0
	iorwf POSTINC1,W,0
	movff POSTINC1,PRODL
	bcf PRODL,7,0
	iorwf PRODL,W,0
	IBZ L18_putfloat_244_endif
;    {
;       while (x < 1.0)
L18_putfloat_243_while
	movlw -13
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	movlw -128
	movwf R0+2,0
	movlw 63
	movwf R0+3,0
	ICALL ltFP
	movf POSTDEC0,W,0
	IBZ L18_putfloat_243_exit
;       {
;          x *= 10.0;
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	movlw 13
	ICALL getLOCALNEGADDR
	ICALL ipmulFP
;          ie--;
	movlw -9
	decf PLUSW0,F,0
;       }
	IBRA L18_putfloat_243_while
L18_putfloat_243_exit
;    }
; 
;    while (x >= 10.0)
L18_putfloat_244_endif
L18_putfloat_245_while
	movlw -13
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	ICALL geFP
	movf POSTDEC0,W,0
	IBZ L18_putfloat_245_exit
;    {
;       x /= 10.0;
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	movlw 13
	ICALL getLOCALNEGADDR
	ICALL ipdivFP
;       ie++;
	movlw -9
	incf PLUSW0,F,0
;    }
	IBRA L18_putfloat_245_while
L18_putfloat_245_exit
; 
; 
;    if (!estyle) ndig += ie;
	movlw -5
	movf PLUSW0,F,0
	IBNZ L18_putfloat_246_endif
	movlw -9
	movf PLUSW0,W,0
	movwf PRODL,0
	movlw 6
	ICALL getLOCALNEGADDR
	movf PRODL,W,0
	addwf INDF1,F,0
; 
; 
; 
;    for (y = i = 1; i < ndig; i++)
L18_putfloat_246_endif
	movlw 1
	movwf PREINC0,0
	movlw -9
	movff INDF0,PLUSW0
	ICALL cast8_F
	movlw -3
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
L18_putfloat_247
	movlw -8
	movff PLUSW0,PREINC0
	movlw -7
	movf PLUSW0,W,0
	ICALL LT8
	movf POSTDEC0,W,0
	IBZ L18_putfloat_248
;       y /= 10.;
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	movlw 3
	ICALL getLOCALNEGADDR
	ICALL ipdivFP
L18_putfloat_249
	movlw -8
	incf PLUSW0,F,0
	IBRA L18_putfloat_247
L18_putfloat_248
;    x += y / 2.;
	movlw -3
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	clrf R0+2,0
	movlw 64
	movwf R0+3,0
	ICALL divFP
	movff POSTDEC0,R0+3
	movff POSTDEC0,R0+2
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	movlw 13
	ICALL getLOCALNEGADDR
	ICALL ipaddFP
; 
;    if (x >= 10.0)
	movlw -13
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	ICALL geFP
	movf POSTDEC0,W,0
	IBZ L18_putfloat_250_endif
;    {
;       x = 1.0 ;
	movlw -13
	clrf PLUSW0,0
	movlw -12
	clrf PLUSW0,0
	movlw -128
	movwf PREINC0,0
	movlw -11
	movff POSTDEC0,PLUSW0
	movlw 63
	movwf PREINC0,0
	movlw -10
	movff POSTDEC0,PLUSW0
;       ie++;
	movlw -9
	incf PLUSW0,F,0
;    }
; 
; 
; 
; 
;    if (!estyle && ie < 0)
L18_putfloat_250_endif
	clrf PREINC0,0
	movlw -6
	movff PLUSW0,PREINC0
	ICALL lnot8
	movf POSTDEC0,W,0
	IBZ L18_putfloat_256
	movlw -10
	movf PLUSW0,W,0
	clrf PREINC0,0
	btfsc WREG,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_putfloat_256
	incf INDF0,F,0
L18_putfloat_256
	movf POSTDEC0,W,0
	IBZ L18_putfloat_255_endif
;    {
;       putchar('0');
	movlw 48
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       putchar('.'); cnt += 2 ;
	movlw 46
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
	movlw -4
	incf PLUSW0,F,0
	incf PLUSW0,F,0
;       if (ndig < 0) ie = ie - ndig;
	movlw -6
	movf PLUSW0,W,0
	clrf PREINC0,0
	btfsc WREG,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_putfloat_251_endif
	movlw -9
	movff PLUSW0,PREINC0
	movlw -7
	movf PLUSW0,W,0
	subwf INDF0,F,0
	movlw -9
	movff POSTDEC0,PLUSW0
;       for (i = -1; i > ie; i--)
L18_putfloat_251_endif
	movlw -8
	setf PLUSW0,0
L18_putfloat_252
	movlw -8
	movff PLUSW0,PREINC0
	movlw -10
	movf PLUSW0,W,0
	ICALL GT8
	movf POSTDEC0,W,0
	IBZ L18_putfloat_253
;       {
;          putchar( '0' );
	movlw 48
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++cnt ;
	movlw -4
	incf PLUSW0,F,0
;       }
L18_putfloat_254
	movlw -8
	decf PLUSW0,F,0
	IBRA L18_putfloat_252
L18_putfloat_253
;    }
;    for (i = 0; i < ndig; i++)
L18_putfloat_255_endif
	movlw -8
	clrf PLUSW0,0
L18_putfloat_260
	movlw -8
	movff PLUSW0,PREINC0
	movlw -7
	movf PLUSW0,W,0
	ICALL LT8
	movf POSTDEC0,W,0
	IBZ L18_putfloat_261
;    {
;       k = x;
	movlw -13
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	ICALL castF_8
	movlw -7
	movff POSTDEC0,PLUSW0
;       putchar( k + '0' ) ;
	movff PLUSW0,PREINC0
	movlw 48
	addwf INDF0,F,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       ++cnt ;
	movlw -4
	incf PLUSW0,F,0
;       if (i == (estyle ? 0 : ie))
	movlw -8
	movff PLUSW0,PREINC0
	movlw -6
	movf PLUSW0,F,0
	IBZ L18_putfloat_259
	movlw 0
	IBRA L18_putfloat_258
L18_putfloat_259
	movlw -10
	movf PLUSW0,W,0
L18_putfloat_258
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_putfloat_257_endif
;       {
;          putchar('.');
	movlw 46
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++cnt ;
	movlw -4
	incf PLUSW0,F,0
;       }
;       x -= (y = k);
L18_putfloat_257_endif
	movlw -7
	movff PLUSW0,PREINC0
	ICALL cast8_F
	movlw 7
	ICALL getLOCALNEGADDR
	movlw -4
L18_putfloat_272
	addlw 1
	movff PLUSW0,POSTINC1
	bnz L18_putfloat_272
	movff POSTDEC0,R0+3
	movff POSTDEC0,R0+2
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	movlw 13
	ICALL getLOCALNEGADDR
	ICALL ipsubFP
;       x *= 10.0;
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	movlw 13
	ICALL getLOCALNEGADDR
	ICALL ipmulFP
;    }
L18_putfloat_262
	movlw -8
	incf PLUSW0,F,0
	IBRA L18_putfloat_260
L18_putfloat_261
; 
; 
;    if (estyle && ie != 0)
	clrf PREINC0,0
	movlw -6
	movf PLUSW0,F,0
	IBZ L18_putfloat_271
	movlw -10
	movf PLUSW0,F,0
	IBZ L18_putfloat_271
	incf INDF0,F,0
L18_putfloat_271
	movf POSTDEC0,W,0
	IBZ L18_putfloat_270_endif
;    {
;       putchar( format );
	movlw -15
	movff PLUSW0,PREINC0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;       ++cnt ;
	movlw -4
	incf PLUSW0,F,0
;       if (ie < 0)
	movlw -9
	movf PLUSW0,W,0
	clrf PREINC0,0
	btfsc WREG,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_putfloat_263_endif
;       {
;          ie = -ie;
	movlw -9
	movff PLUSW0,PREINC0
	comf INDF0,F,0
	incf INDF0,F,0
	movff POSTDEC0,PLUSW0
;          putchar( '-' );
	movlw 45
	movwf PREINC0,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++cnt ;
	movlw -4
	incf PLUSW0,F,0
;       }
;       for (k = 100; k > ie; k /= 10);
L18_putfloat_263_endif
	movlw 100
	movwf PREINC0,0
	movlw -7
	movff POSTDEC0,PLUSW0
L18_putfloat_264
	movlw -7
	movff PLUSW0,PREINC0
	movlw -10
	movf PLUSW0,W,0
	ICALL GT8
	movf POSTDEC0,W,0
	IBZ L18_putfloat_265
L18_putfloat_266
	movlw 7
	ICALL getLOCALNEGADDR
	movlw 10
	ICALL ipdiv8
	IBRA L18_putfloat_264
L18_putfloat_265
; 
;       for (; k > 0; k /= 10)
L18_putfloat_267
	movlw -7
	movf PLUSW0,W,0
	ICALL GT8ZERO
	movf POSTDEC0,W,0
	IBZ L18_putfloat_268
;       {
;          putchar( ie / k + '0' );
	movlw -9
	movff PLUSW0,PREINC0
	movlw -8
	movf PLUSW0,W,0
	ICALL div8
	movlw 48
	addwf INDF0,F,0
	ICALL C18_putchar
	movf POSTDEC0,F,0 ; clean stack 
;          ++cnt ;
	movlw -4
	incf PLUSW0,F,0
;          ie = ie % k;
	movlw -9
	movff PLUSW0,PREINC0
	movlw -8
	movf PLUSW0,W,0
	ICALL mod8
	movlw -9
	movff POSTDEC0,PLUSW0
;       }
L18_putfloat_269
	movlw 7
	ICALL getLOCALNEGADDR
	movlw 10
	ICALL ipdiv8
	IBRA L18_putfloat_267
L18_putfloat_268
;    }
;    return cnt ;
L18_putfloat_270_endif
	movlw -4
	movff PLUSW0,R0
; }
L18_putfloat_236
; --- non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 10
	subwf FSR0L,F,0
	movlw 0
	subwfb FSR0H,F,0 ; clean stack 
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
	return 0
;<?C18_putchar>
;<?GT8>
;<?GT8ZERO>
;<?LT8>
;<?UEQ8>
;<?cast8_F>
;<?castF_8>
;<?div8>
;<?divFP>
;<?geFP>
;<?getLOCALNEGADDR>
;<?ipaddFP>
;<?ipdiv8>
;<?ipdivFP>
;<?ipmulFP>
;<?ipsubFP>
;<?lnot8>
;<?ltFP>
;<?mod8>
;<-> int putfloat(float x@2,int prec@1,int format@0)

;<+C18_getfloat> int getfloat(float *pf@0)
C18_getfloat
; ---  non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 15
	addwf FSR0L,F,0
	movlw 0
	addwfc FSR0H,F,0  ; reserve stack
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
;    float number;
;    long exponent;
;    int negative;
;    float p10;
;    int n;
;    int num_digits;
;    int num_decimals;
;    int c ;
; 
; 
;    while ( (c = getchar()) == ' ' || c == '\t' || c == '\n' ) ;
L18_getfloat_274_while
	movlw 1
	movwf PREINC0,0
	movwf PREINC0,0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -3
	movff INDF0,PLUSW0
	movlw 32
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_276
	movlw -2
	movff PLUSW0,PREINC0
	movlw 9
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_276
	decf INDF0,F,0
L18_getfloat_276
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_275
	movlw -1
	movff PLUSW0,PREINC0
	movlw 10
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_275
	decf INDF0,F,0
L18_getfloat_275
	movf POSTDEC0,W,0
	IBZ L18_getfloat_274_exit
	IBRA L18_getfloat_274_while
L18_getfloat_274_exit
; 
; 
;    negative = 0;
	movlw -8
	clrf PLUSW0,0
;    switch (c)
	movf INDF0,W,0
	addlw 213
	IBZ L18_getfloat_277_case_43
	addlw 254
	IBNZ L18_getfloat_277_case_default
;    {
;    case '-':
L18_getfloat_277_case_45
;       negative = 1;
	movlw 1
	movwf PREINC0,0
	movlw -8
	movff POSTDEC0,PLUSW0
;    case '+':
L18_getfloat_277_case_43
;       break ;
	IBRA L18_getfloat_277_exit
;    default:
L18_getfloat_277_case_default
;       ungetchar(c) ;
	movff INDF0,PREINC0
	ICALL cast8_16
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
;       break ;
	IBRA L18_getfloat_277_exit
;    }
L18_getfloat_277_exit
; 
;    number = 0.0;
	movlw -14
	clrf PLUSW0,0
	movlw -13
	clrf PLUSW0,0
	movlw -12
	clrf PLUSW0,0
	movlw -11
	clrf PLUSW0,0
;    exponent = 0;
	movlw -10
	clrf PLUSW0,0
	movlw -9
	clrf PLUSW0,0
;    num_digits = 0;
	movlw -2
	clrf PLUSW0,0
;    num_decimals = 0;
	movlw -1
	clrf PLUSW0,0
; 
; 
;    while ( (c = getchar()) >= '0' && c <= '9')
L18_getfloat_278_while
	clrf PREINC0,0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -2
	movff INDF0,PLUSW0
	movlw 48
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_getfloat_279
	movlw -1
	movff PLUSW0,PREINC0
	movlw 57
	ICALL LE8
	movf POSTDEC0,W,0
	IBZ L18_getfloat_279
	incf INDF0,F,0
L18_getfloat_279
	movf POSTDEC0,W,0
	IBZ L18_getfloat_278_exit
;    {
;       number = number * 10.0 + (c - '0');
	movlw -14
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	ICALL mulFP
	movlw -4
	movff PLUSW0,PREINC0
	movlw 48
	subwf INDF0,F,0
	ICALL cast8_F
	movff POSTDEC0,R0+3
	movff POSTDEC0,R0+2
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	ICALL addFP
	movlw -14
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
;       num_digits++;
	movlw -2
	incf PLUSW0,F,0
;    }
	IBRA L18_getfloat_278_while
L18_getfloat_278_exit
; 
; 
;    if (c == '.')
	movff INDF0,PREINC0
	movlw 46
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBZ L18_getfloat_282_endif
;    {
;       while ( (c = getchar()) >= '0' && c <= '9')
L18_getfloat_280_while
	clrf PREINC0,0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -2
	movff INDF0,PLUSW0
	movlw 48
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_getfloat_281
	movlw -1
	movff PLUSW0,PREINC0
	movlw 57
	ICALL LE8
	movf POSTDEC0,W,0
	IBZ L18_getfloat_281
	incf INDF0,F,0
L18_getfloat_281
	movf POSTDEC0,W,0
	IBZ L18_getfloat_280_exit
;       {
;          number = number * 10.0 + (c - '0');
	movlw -14
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	clrf R0+0,0
	clrf R0+1,0
	movlw 32
	movwf R0+2,0
	movlw 65
	movwf R0+3,0
	ICALL mulFP
	movlw -4
	movff PLUSW0,PREINC0
	movlw 48
	subwf INDF0,F,0
	ICALL cast8_F
	movff POSTDEC0,R0+3
	movff POSTDEC0,R0+2
	movff POSTDEC0,R0+1
	movff POSTDEC0,R0+0
	ICALL addFP
	movlw -14
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
;          num_digits++;
	movlw -2
	incf PLUSW0,F,0
;          num_decimals++;
	movlw -1
	incf PLUSW0,F,0
;       }
	IBRA L18_getfloat_280_while
L18_getfloat_280_exit
;       exponent -= num_decimals;
	movlw -1
	movff PLUSW0,R0
	clrf R0H,0
	btfsc R0L,7,0
	setf R0H,0
	movlw 10
	ICALL getLOCALNEGADDR
	movf R0,W,0
	subwf POSTINC1,F,0
	movf R0+1,W,0
	subwfb POSTDEC1,F,0
;    }
; 
;    if (num_digits == 0)
L18_getfloat_282_endif
	movlw -2
	movf PLUSW0,F,0
	IBNZ L18_getfloat_283_endif
;    {
;       errno = 34;
	movlw 34
	movwf C18_errno+0,0
;       *pf = 0.0 ;
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	clrf POSTINC1,0
	clrf POSTINC1,0
	clrf POSTINC1,0
	clrf POSTINC1,0
;       return 0 ;
	clrf R0,0
	IBRA L18_getfloat_273
;    }
; 
; 
;    if (negative) number = -number;
L18_getfloat_283_endif
	movlw -8
	movf PLUSW0,F,0
	IBZ L18_getfloat_284_endif
	movlw -14
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	btg INDF0,7,0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
	movff POSTDEC0,PLUSW0
; 
; 
;    if (c == 'e' || c == 'E')
L18_getfloat_284_endif
	movlw 1
	movwf PREINC0,0
	movlw -1
	movff PLUSW0,PREINC0
	movlw 101
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_290
	movlw -1
	movff PLUSW0,PREINC0
	movlw 69
	ICALL UEQ8
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_290
	decf INDF0,F,0
L18_getfloat_290
	movf POSTDEC0,W,0
	IBZ L18_getfloat_289_endif
;    {
; 
;       negative = 0;
	movlw -8
	clrf PLUSW0,0
;       c = getchar() ;
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movff POSTDEC0,INDF0
;       switch(c)
	movf INDF0,W,0
	addlw 213
	IBZ L18_getfloat_285_case_43
	addlw 254
	IBNZ L18_getfloat_285_case_default
;       {
;       case '-':
L18_getfloat_285_case_45
;          negative = 1;
	movlw 1
	movwf PREINC0,0
	movlw -8
	movff POSTDEC0,PLUSW0
;       case '+':
L18_getfloat_285_case_43
;          break ;
	IBRA L18_getfloat_285_exit
;       default:
L18_getfloat_285_case_default
;          ungetchar(c) ;
	movff INDF0,PREINC0
	ICALL cast8_16
	ICALL C18_ungetchar
	movf POSTDEC0,F,0 ; clean stack 
	movf POSTDEC0,F,0 ; clean stack 
;          break ;
	IBRA L18_getfloat_285_exit
;       }
L18_getfloat_285_exit
; 
; 
;       n = 0;
	movlw -3
	clrf PLUSW0,0
;       while ( (c = getchar()) >= '0' && c <= '9' )
L18_getfloat_286_while
	clrf PREINC0,0
	ICALL C18_getchar
	movff R0+0,PREINC0
	movff R0+1,PREINC0
	clrf POSTDEC0,0
	movlw -2
	movff INDF0,PLUSW0
	movlw 48
	ICALL GE8
	movf POSTDEC0,W,0
	IBZ L18_getfloat_287
	movlw -1
	movff PLUSW0,PREINC0
	movlw 57
	ICALL LE8
	movf POSTDEC0,W,0
	IBZ L18_getfloat_287
	incf INDF0,F,0
L18_getfloat_287
	movf POSTDEC0,W,0
	IBZ L18_getfloat_286_exit
;       {
;          n = n * 10 + (c - '0');
	movlw -3
	movff PLUSW0,PREINC0
	movlw 10
	mulwf INDF0,0
	movff PRODL,INDF0
	movlw -1
	movff PLUSW0,PREINC0
	movlw 48
	subwf INDF0,F,0
	movf POSTDEC0,W,0
	addwf INDF0,F,0
	movlw -3
	movff POSTDEC0,PLUSW0
;       }
	IBRA L18_getfloat_286_while
L18_getfloat_286_exit
; 
;       if (negative)
	movlw -8
	movf PLUSW0,F,0
	IBZ L18_getfloat_288_else
;          exponent -= n;
	movlw -3
	movff PLUSW0,R0
	clrf R0H,0
	btfsc R0L,7,0
	setf R0H,0
	movlw 10
	ICALL getLOCALNEGADDR
	movf R0,W,0
	subwf POSTINC1,F,0
	movf R0+1,W,0
	subwfb POSTDEC1,F,0
;       else
	IBRA L18_getfloat_288_endif
L18_getfloat_288_else
;          exponent += n;
	movlw -3
	movff PLUSW0,R0
	clrf R0H,0
	btfsc R0L,7,0
	setf R0H,0
	movlw 10
	ICALL getLOCALNEGADDR
	movf R0,W,0
	addwf POSTINC1,F,0
	movf R0+1,W,0
	addwfc POSTDEC1,F,0
L18_getfloat_288_endif
;    }
;    if (exponent < -125L || exponent > 128L)
L18_getfloat_289_endif
	movlw 1
	movwf PREINC0,0
	movlw -11
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -125
	movwf R0+0,0
	setf R0+1,0
	ICALL LT16
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_297
	movlw -11
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -128
	movwf R0+0,0
	clrf R0+1,0
	ICALL GT16
	movf POSTDEC0,W,0
	IBNZ L18_getfloat_297
	decf INDF0,F,0
L18_getfloat_297
	movf POSTDEC0,W,0
	IBZ L18_getfloat_296_else
;    {
;        errno = 34;
	movlw 34
	movwf C18_errno+0,0
;       *pf = 3.40282347e+38f ;
	movlw -16
	movff PLUSW0,FSR1L
	movlw -15
	movff PLUSW0,FSR1H
	setf POSTINC1,0
	setf POSTINC1,0
	movlw 127
	movwf POSTINC1,0
	movwf POSTINC1,0
;    }
;    else
	IBRA L18_getfloat_296_endif
L18_getfloat_296_else
;    {
; 
;       p10 = 10.;
	movlw -7
	clrf PLUSW0,0
	movlw -6
	clrf PLUSW0,0
	movlw 32
	movwf PREINC0,0
	movlw -5
	movff POSTDEC0,PLUSW0
	movlw 65
	movwf PREINC0,0
	movlw -4
	movff POSTDEC0,PLUSW0
;       n = exponent;
	movlw -10
	movff PLUSW0,PREINC0
	movlw -3
	movff POSTDEC0,PLUSW0
;       if (n < 0) n = -n;
	movf PLUSW0,W,0
	clrf PREINC0,0
	btfsc WREG,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_getfloat_291_endif
	movlw -3
	movff PLUSW0,PREINC0
	comf INDF0,F,0
	incf INDF0,F,0
	movff POSTDEC0,PLUSW0
;       while (n)
L18_getfloat_291_endif
L18_getfloat_294_while
	movlw -3
	movf PLUSW0,F,0
	IBZ L18_getfloat_294_exit
;       {
;          if (n & 1)
	movf PLUSW0,W,0
	andlw 1
	IBZ L18_getfloat_293_endif
;          {
;             if (exponent < 0)
	movlw -10
	movff PLUSW0,R0+0
	movlw -9
	movff PLUSW0,R0+1
	clrf PREINC0,0
	btfsc R0+1,7,0
	incf INDF0,F,0
	movf POSTDEC0,W,0
	IBZ L18_getfloat_292_else
;                number /= p10;
	movlw -7
	movff PLUSW0,R0+0
	movlw -6
	movff PLUSW0,R0+1
	movlw -5
	movff PLUSW0,R0+2
	movlw -4
	movff PLUSW0,R0+3
	movlw 14
	ICALL getLOCALNEGADDR
	ICALL ipdivFP
;             else
	IBRA L18_getfloat_292_endif
L18_getfloat_292_else
;                number *= p10;
	movlw -7
	movff PLUSW0,R0+0
	movlw -6
	movff PLUSW0,R0+1
	movlw -5
	movff PLUSW0,R0+2
	movlw -4
	movff PLUSW0,R0+3
	movlw 14
	ICALL getLOCALNEGADDR
	ICALL ipmulFP
L18_getfloat_292_endif
;          }
;          n >>= 1;
L18_getfloat_293_endif
	movlw 3
	ICALL getLOCALNEGADDR
	movlw 1
	ICALL iprshift8
;          p10 *= p10;
	movlw -7
	movff PLUSW0,R0+0
	movlw -6
	movff PLUSW0,R0+1
	movlw -5
	movff PLUSW0,R0+2
	movlw -4
	movff PLUSW0,R0+3
	movlw 7
	ICALL getLOCALNEGADDR
	ICALL ipmulFP
;       }
	IBRA L18_getfloat_294_while
L18_getfloat_294_exit
;       if (number == 3.40282347e+38f) errno = 34;
	movlw -14
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	setf R0+0,0
	setf R0+1,0
	movlw 127
	movwf R0+2,0
	movwf R0+3,0
	ICALL eqFP
	movf POSTDEC0,W,0
	IBZ L18_getfloat_295_endif
	movlw 34
	movwf C18_errno+0,0
;       *pf = number ;
L18_getfloat_295_endif
	movlw -14
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movff PLUSW0,PREINC0
	movlw -20
	movff PLUSW0,FSR1L
	movlw -19
	movff PLUSW0,FSR1H
	movlw 4
L18_getfloat_298
	decf WREG,F,0
	movff POSTDEC0,PLUSW1
	bnz L18_getfloat_298
;    }
L18_getfloat_296_endif
; 
;    return num_digits ;
	movlw -2
	movff PLUSW0,R0
; }
L18_getfloat_273
; --- non interruptible section
	movlw 0x3f
	andwf INTCON,F,0
	movlw 15
	subwf FSR0L,F,0
	movlw 0
	subwfb FSR0H,F,0 ; clean stack 
	movf IT_MASK,W,0
	iorwf INTCON,F,0
; --- end of non interruptible section
	return 0
;<?C18_errno>
;<?C18_getchar>
;<?C18_ungetchar>
;<?GE8>
;<?GT16>
;<?LE8>
;<?LT16>
;<?UEQ8>
;<?addFP>
;<?cast8_16>
;<?cast8_F>
;<?eqFP>
;<?getLOCALNEGADDR>
;<?ipdivFP>
;<?ipmulFP>
;<?iprshift8>
;<?mulFP>
;<-> int getfloat(float *pf@0)
;
;<+C18_tblptr>
C18_tblptr equ 0xff6
;<->
;
;<+C18_tos>
C18_tos equ 0xffd
;<->
;
;<+C18_tosl>
C18_tosl equ 0xffd
;<->
;
;<+C18_tblptru>
C18_tblptru equ 0xff8
;<->
;
;<+C18_tblptrl>
C18_tblptrl equ 0xff6
;<->
;
;<+C18_tablat>
C18_tablat equ 0xff5
;<->
;
;<+C18_prodhl>
C18_prodhl equ 0xff3
;<->
;
;<+C18_prodl>
C18_prodl equ 0xff3
;<->
;
;<+C18_errno>
C18_errno equ 0x1
;<->
;
;<+C18_io_putchar|UDATA>
	CBLOCK
	C18_io_putchar:2
	ENDC
;<->
;
;<+C18_io_getchar|UDATA>
	CBLOCK
	C18_io_getchar:2
	ENDC
;<->
;
;<+C18_io_buf|UDATA>
	CBLOCK
	C18_io_buf:80
	ENDC
;<->
;
;<+C18_io_count|IDATA>
	CBLOCK
	C18_io_count:1
	ENDC
;<= 0x00 >
;<->
;
;<+C18_io_status|IDATA>
	CBLOCK
	C18_io_status:1
	ENDC
;<= 0x00 >
;<->
;
;<+C18_io_ptr|UDATA>
	CBLOCK
	C18_io_ptr:2
	ENDC
;<->
	END

